[{"D:\\GIT\\Front_End\\src\\index.js":"1","D:\\GIT\\Front_End\\src\\reportWebVitals.js":"2","D:\\GIT\\Front_End\\src\\App.js":"3","D:\\GIT\\Front_End\\src\\contextAPI.js":"4","D:\\GIT\\Front_End\\src\\store.js":"5","D:\\GIT\\Front_End\\src\\components\\Login.js":"6","D:\\GIT\\Front_End\\src\\components\\AddRegistration.js":"7","D:\\GIT\\Front_End\\src\\components\\Register.js":"8","D:\\GIT\\Front_End\\src\\appData.js":"9","D:\\GIT\\Front_End\\src\\components\\Footer.js":"10","D:\\GIT\\Front_End\\src\\components\\DeliveryInfo.js":"11","D:\\GIT\\Front_End\\src\\components\\Details1.js":"12","D:\\GIT\\Front_End\\src\\components\\Register1.js":"13","D:\\GIT\\Front_End\\src\\components\\Selection.js":"14","D:\\GIT\\Front_End\\src\\components\\Navigationbar.js":"15","D:\\GIT\\Front_End\\src\\components\\Productlist.js":"16","D:\\GIT\\Front_End\\src\\components\\Pages\\Home.js":"17","D:\\GIT\\Front_End\\src\\components\\Pages\\About.js":"18","D:\\GIT\\Front_End\\src\\components\\Pages\\Privacy.js":"19","D:\\GIT\\Front_End\\src\\components\\Admin\\Admin.js":"20","D:\\GIT\\Front_End\\src\\components\\Admin\\GetBuyers.js":"21","D:\\GIT\\Front_End\\src\\components\\Products\\Details.js":"22","D:\\GIT\\Front_End\\src\\components\\Admin\\GetSellers.js":"23","D:\\GIT\\Front_End\\src\\components\\upload_product\\ProductList.js":"24","D:\\GIT\\Front_End\\src\\components\\upload_product\\Product.js":"25","D:\\GIT\\Front_End\\src\\components\\routing\\PrivateRoute.js":"26","D:\\GIT\\Front_End\\src\\components\\routing\\SellerRoute.js":"27","D:\\GIT\\Front_End\\src\\components\\routing\\BuyerRoute.js":"28","D:\\GIT\\Front_End\\src\\components\\routing\\AdminRoute.js":"29","D:\\GIT\\Front_End\\src\\Actions\\Auth.js":"30","D:\\GIT\\Front_End\\src\\components\\Layout\\Alert.js":"31","D:\\GIT\\Front_End\\src\\components\\Cart\\CartProducts.js":"32","D:\\GIT\\Front_End\\src\\components\\Accept\\AcceptList.js":"33","D:\\GIT\\Front_End\\src\\components\\Receipts\\Receipt.js":"34","D:\\GIT\\Front_End\\src\\components\\Receipts\\CoD.js":"35","D:\\GIT\\Front_End\\src\\components\\Order\\Order.js":"36","D:\\GIT\\Front_End\\src\\components\\Payment\\Checkout.js":"37","D:\\GIT\\Front_End\\src\\components\\Product.js":"38","D:\\GIT\\Front_End\\src\\components\\GiftCart.js":"39","D:\\GIT\\Front_End\\src\\Actions\\alert.js":"40","D:\\GIT\\Front_End\\src\\components\\Order\\CartDetails.js":"41","D:\\GIT\\Front_End\\src\\Actions\\types.js":"42","D:\\GIT\\Front_End\\src\\components\\Accept\\Accept.js":"43","D:\\GIT\\Front_End\\src\\components\\Cart\\Cart.js":"44","D:\\GIT\\Front_End\\src\\components\\Products\\Products.js":"45","D:\\GIT\\Front_End\\src\\components\\Imageslider.js":"46","D:\\GIT\\Front_End\\src\\reducers\\index.js":"47","D:\\GIT\\Front_End\\src\\components\\Cart\\CartNew.js":"48","D:\\GIT\\Front_End\\src\\components\\Products\\Card.js":"49","D:\\GIT\\Front_End\\src\\components\\Cart\\CartItem.js":"50","D:\\GIT\\Front_End\\src\\reducers\\alert.js":"51","D:\\GIT\\Front_End\\src\\reducers\\auth.js":"52","D:\\GIT\\Front_End\\src\\components\\Cart\\CartItemNew.js":"53"},{"size":738,"mtime":1623133647844,"results":"54","hashOfConfig":"55"},{"size":375,"mtime":1623132577365,"results":"56","hashOfConfig":"55"},{"size":4101,"mtime":1623133427677,"results":"57","hashOfConfig":"55"},{"size":3782,"mtime":1623133493168,"results":"58","hashOfConfig":"55"},{"size":403,"mtime":1623132577365,"results":"59","hashOfConfig":"55"},{"size":2486,"mtime":1623132577357,"results":"60","hashOfConfig":"55"},{"size":4108,"mtime":1623132577341,"results":"61","hashOfConfig":"55"},{"size":4204,"mtime":1623132577361,"results":"62","hashOfConfig":"55"},{"size":6054,"mtime":1623133311005,"results":"63","hashOfConfig":"55"},{"size":2625,"mtime":1623132577356,"results":"64","hashOfConfig":"55"},{"size":16010,"mtime":1623132577350,"results":"65","hashOfConfig":"55"},{"size":2576,"mtime":1623136603425,"results":"66","hashOfConfig":"55"},{"size":4216,"mtime":1623132577362,"results":"67","hashOfConfig":"55"},{"size":936,"mtime":1623134097163,"results":"68","hashOfConfig":"55"},{"size":4982,"mtime":1623133895413,"results":"69","hashOfConfig":"55"},{"size":1560,"mtime":1623136258074,"results":"70","hashOfConfig":"55"},{"size":1760,"mtime":1623132577359,"results":"71","hashOfConfig":"55"},{"size":4280,"mtime":1623132577359,"results":"72","hashOfConfig":"55"},{"size":1705,"mtime":1623132577359,"results":"73","hashOfConfig":"55"},{"size":516,"mtime":1623132577341,"results":"74","hashOfConfig":"55"},{"size":3033,"mtime":1623132577342,"results":"75","hashOfConfig":"55"},{"size":14093,"mtime":1623132577360,"results":"76","hashOfConfig":"55"},{"size":3058,"mtime":1623132577342,"results":"77","hashOfConfig":"55"},{"size":4557,"mtime":1623132577363,"results":"78","hashOfConfig":"55"},{"size":5672,"mtime":1623132577363,"results":"79","hashOfConfig":"55"},{"size":599,"mtime":1623132577362,"results":"80","hashOfConfig":"55"},{"size":699,"mtime":1623132577362,"results":"81","hashOfConfig":"55"},{"size":669,"mtime":1623132577362,"results":"82","hashOfConfig":"55"},{"size":679,"mtime":1623132577362,"results":"83","hashOfConfig":"55"},{"size":4602,"mtime":1623132577319,"results":"84","hashOfConfig":"55"},{"size":461,"mtime":1623132577357,"results":"85","hashOfConfig":"55"},{"size":1104,"mtime":1623132577350,"results":"86","hashOfConfig":"55"},{"size":4025,"mtime":1623132577341,"results":"87","hashOfConfig":"55"},{"size":7362,"mtime":1623132577361,"results":"88","hashOfConfig":"55"},{"size":5939,"mtime":1623132577361,"results":"89","hashOfConfig":"55"},{"size":19075,"mtime":1623132577358,"results":"90","hashOfConfig":"55"},{"size":5927,"mtime":1623132577359,"results":"91","hashOfConfig":"55"},{"size":1836,"mtime":1623136199898,"results":"92","hashOfConfig":"55"},{"size":6066,"mtime":1623136709259,"results":"93","hashOfConfig":"55"},{"size":369,"mtime":1623132577319,"results":"94","hashOfConfig":"55"},{"size":1746,"mtime":1623132577357,"results":"95","hashOfConfig":"55"},{"size":305,"mtime":1623132577320,"results":"96","hashOfConfig":"55"},{"size":3815,"mtime":1623132577341,"results":"97","hashOfConfig":"55"},{"size":4154,"mtime":1623132577344,"results":"98","hashOfConfig":"55"},{"size":8004,"mtime":1623132577361,"results":"99","hashOfConfig":"55"},{"size":2506,"mtime":1623132577356,"results":"100","hashOfConfig":"55"},{"size":189,"mtime":1623132577365,"results":"101","hashOfConfig":"55"},{"size":2566,"mtime":1623132577345,"results":"102","hashOfConfig":"55"},{"size":1378,"mtime":1623132577359,"results":"103","hashOfConfig":"55"},{"size":1319,"mtime":1623132577345,"results":"104","hashOfConfig":"55"},{"size":423,"mtime":1623132577364,"results":"105","hashOfConfig":"55"},{"size":1446,"mtime":1623132577364,"results":"106","hashOfConfig":"55"},{"size":594,"mtime":1623132577345,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"m92l2t",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"110"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"110"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"110"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"110"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"110"},"D:\\GIT\\Front_End\\src\\index.js",[],["246","247"],"D:\\GIT\\Front_End\\src\\reportWebVitals.js",[],"D:\\GIT\\Front_End\\src\\App.js",["248","249"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navigationbar from './components/Navigationbar';\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport Home from './components/Pages/Home';\r\nimport Footer from '../src/components/Footer';\r\nimport Privacy from './components/Pages/Privacy';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Register1 from './components/Register1';\r\nimport Details from './components/Products/Details';\r\nimport GetSellers from './components/Admin/GetSellers';\r\nimport Admin from './components/Admin/Admin';\r\nimport GetBuyers from './components/Admin/GetBuyers';\r\nimport DeliveryInfo from './components/DeliveryInfo';\r\nimport About from './components/Pages/About';\r\nimport ProductList from './components/upload_product/ProductList'\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport AdminRoute from './components/routing/AdminRoute';\r\nimport SellerRoute from './components/routing/SellerRoute';\r\nimport BuyerRoute from './components/routing/BuyerRoute';\r\nimport Alert from \"./components/Layout/Alert\";\r\nimport {loadUser} from './Actions/Auth'\r\nimport  { useEffect } from 'react';\r\nimport Selection from './components/Selection';\r\nimport CartProducts from './components/Cart/CartProducts';\r\nimport AddRegistration from './components/AddRegistration';\r\nimport AcceptList from './components/Accept/AcceptList';\r\nimport Order from './components/Order/Order';\r\nimport Checkout from './components/Payment/Checkout';\r\nimport Receipt from './components/Receipts/Receipt';\r\nimport CoD from './components/Receipts/CoD';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Product from './components/Product';\r\nimport Productlist from './components/Productlist';\r\nimport Details1 from './components/Details1';\r\nimport GiftCart from './components/GiftCart';\r\n\r\n\r\n\r\n\r\n\r\n  const App = ()=>{\r\n    useEffect(()=>{\r\n      store.dispatch(loadUser())\r\n    }, []) \r\n    \r\n      return (\r\n        <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div>\r\n          <Route exact render={props=> <Navigationbar {...props}/>}/>\r\n            <Alert />\r\n              <div>\r\n                <PrivateRoute exact path='/' component={Home}/>\r\n                <Route path='/Login' component={Login}/>\r\n                <Route path='/Register' component={Register}/>\r\n                <AdminRoute path='/GetSellers' component={GetSellers}/>\r\n                <AdminRoute path='/GetBuyers' component={GetBuyers}/>\r\n                <Route path='/DeliveryInfo' component={DeliveryInfo}/>\r\n                <Route path='/About' component={About}/>\r\n                <SellerRoute path='/upload_product/ProductList' component={ProductList}/>\r\n                <Route path='/Register1' component={Register1}/>\r\n                <Route path='/Selection' component={Selection}/>\r\n                <Route path='/Details1' component={Details1}/>\r\n                <BuyerRoute path='/CartProducts' component={CartProducts}/>\r\n                <AdminRoute path='/AddRegistration' component={AddRegistration}/>\r\n                <Route path='/Accept/AcceptList' component={AcceptList}/>\r\n                <Route path='/Product' component={Product}/>\r\n                <Route path='/Productlist' component={Productlist}/>\r\n                <Route path='/GiftCart' component={GiftCart}/>\r\n\r\n               \r\n\r\n               \r\n              </div>\r\n          </div>\r\n\r\n          <div>\r\n            <Route path=\"/Privacy\" component={Privacy}/>\r\n            <Route path=\"/products/:productID\" component={Details}/>\r\n          </div>\r\n\r\n          <div>\r\n            <Route path=\"/Order\" component={Order}/>\r\n            <Route path=\"/Checkout\" component={Checkout}/>\r\n            <Route path=\"/Receipt\" component={Receipt}/>\r\n            <Route path=\"/CoD\" component={CoD}/>\r\n          </div>\r\n\r\n          <div>\r\n            <Footer/>\r\n          </div>\r\n          \r\n        </BrowserRouter>\r\n        </Provider>    \r\n  );\r\n  }\r\n\r\n\r\nexport default App;","D:\\GIT\\Front_End\\src\\contextAPI.js",["250","251"],"import React, { Component } from 'react'\r\nimport{ dataProducts, prodInDetails } from './appData';\r\nimport Product from './components/upload_product/Product';\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component{\r\n\r\n    state = {\r\n        products : dataProducts,\r\n        detailProduct : prodInDetails,\r\n        GiftCart : [],\r\n        GiftCartSubTotal:0\r\n\r\n    }\r\n\r\n    getItem = (id) => {\r\n        const product = this.state.products.find(item=> item.id === id);\r\n        return product;\r\n    }\r\n\r\n    handleDetails = (id) => {\r\n        const product = this.getItem(id);\r\n        this.setState(()=> {\r\n            return{detailProduct:product}\r\n        })\r\n    }\r\n\r\n    addToCart = (id)=> {\r\n        let tempProduct =[ ...this.state.products];\r\n        const index = tempProduct.indexOf(this.getItem(id));\r\n        const product = tempProduct[index];\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n        this.setState(()=> {\r\n            return { products : tempProduct, GiftCart: [...this.state.GiftCart,product]}\r\n        },\r\n        ()=> {this.makeTotal()}\r\n        )\r\n\r\n\r\n    }\r\n\r\n    increment=(id)=>{\r\n        let tempCart=[...this.state.GiftCart];\r\n        const selectedProduct = tempCart.find(item=> item.id === id);\r\n        const index= tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n\r\n        product.count = product.count + 1;\r\n        product.total = product.count * product.price;\r\n        this.setState(()=>{\r\n            return { GiftCart: [...tempCart]}\r\n        },()=> {\r\n            this.makeTotal();\r\n        }\r\n\r\n        )\r\n    }\r\n\r\n\r\n    decrement=(id)=>{\r\n        let tempCart=[...this.state.GiftCart];\r\n        const selectedProduct = tempCart.find(item=> item.id === id);\r\n        const index= tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n\r\n        product.count = product.count - 1;\r\n        product.total = product.count * product.price;\r\n        this.setState(()=>{\r\n            return { GiftCart: [...tempCart]}\r\n        },()=> {\r\n            this.makeTotal();\r\n        }\r\n\r\n        )\r\n    }\r\n\r\n    removeItem = (id)=> {\r\n        let tempProduct = [...this.state.products];\r\n        let tempCart = [...this.state.GiftCart];\r\n        tempCart = tempCart.filter(item=> item.id !== id);\r\n        const index = tempProduct.indexOf(this.getItem(id));\r\n\r\n        let removedProd = tempProduct[index];\r\n\r\n        removedProd.inCart = false;\r\n        removedProd.total = 0;\r\n        removedProd.count = 0;\r\n\r\n        this.setState(()=> {\r\n            return{\r\n                GiftCart : [...tempCart],\r\n                product : [...tempProduct]\r\n            }\r\n        }, \r\n        ()=>{\r\n            return this.makeTotal();\r\n        }\r\n        )\r\n\r\n    }\r\n\r\n    makeTotal = () => {\r\n        let subTotal = 0;\r\n        this.state.GiftCart.map(item => (subTotal += item.total));\r\n        const total = subTotal;\r\n        this.setState(()=>{\r\n            return{\r\n                GiftCartSubTotal : subTotal\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ProductContext.Provider value={{\r\n                ...this.state,\r\n                handleDetails : this.handleDetails,\r\n                addToCart : this.addToCart,\r\n                increment : this.increment,\r\n                decrement : this.decrement,\r\n                makeTotal : this.makeTotal,\r\n                removeItem : this.removeItem\r\n                \r\n\r\n            }}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider,ProductConsumer};","D:\\GIT\\Front_End\\src\\store.js",[],"D:\\GIT\\Front_End\\src\\components\\Login.js",[],"D:\\GIT\\Front_End\\src\\components\\AddRegistration.js",["252"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './CSS/form.css';\r\n\r\n\r\nimport {registerAdmin } from '../Actions/Auth';\r\n\r\n\r\n\r\nconst Register = () => {\r\n  const [formData, setFromData] = useState(\r\n    {\r\n        FirstName: '',\r\n        LastName: '',\r\n        Address: '',\r\n        Gender: '',\r\n        Email: '',\r\n        MobileNumber: '',\r\n        Password: '',\r\n        Repasswerd: '',\r\n        Role: 'Admin',\r\n    });\r\n\r\n  const {FirstName, LastName, Address, Gender,Email,MobileNumber,Password,  Repasswerd, Role} = formData;\r\n\r\n  const onChange = e => setFromData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n const onSubmit = async e => {\r\n   \r\n    e.preventDefault();\r\n    registerAdmin(FirstName, LastName, Address, Gender,Email,MobileNumber,Password, Repasswerd,Role);\r\n    \r\n    \r\n\r\n\r\n};\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large \">ADD NEW ADMIN</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"text-middle\" />\r\n      </p>\r\n\r\n\r\n\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <small className=\"form-text\">First Name</small>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"First Name\"\r\n            name=\"FirstName\"\r\n            value={FirstName}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <small className=\"form-text\"> Last Name</small>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Last Name\"\r\n            name=\"LastName\"\r\n            value={LastName}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"></small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <small className=\"form-text\"> Address</small>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            name=\"Address\"\r\n            value={Address}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"></small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <small className=\"form-text\"> Gender</small>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Gender\"\r\n            name=\"Gender\"\r\n            value={Gender}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"></small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <small className=\"form-text\"> Email</small>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            name=\"Email\"\r\n            value={Email}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"></small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <small className=\"form-text\">Mobile Number</small>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"MobileNumber\"\r\n            name=\"MobileNumber\"\r\n            value={MobileNumber}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"></small>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"form-group\">\r\n          <small className=\"form-text\">Password</small>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Please enter minimum 6 digit Password \"\r\n            name=\"Password\"\r\n            value={Password}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <small className=\"form-text\">Confirm Password</small>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Re Enter Password\"\r\n            name=\"Repasswerd\"\r\n            value={Repasswerd}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        \r\n       \r\n        \r\n<div class=\"row row1\">\r\n        \r\n        <div class=\"column column0\"> <input type=\"submit\" className=\"btn btn-primary\" value=\"ADD\" /> </div>\r\n        </div>\r\n      </form>\r\n\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Register;","D:\\GIT\\Front_End\\src\\components\\Register.js",[],"D:\\GIT\\Front_End\\src\\appData.js",[],"D:\\GIT\\Front_End\\src\\components\\Footer.js",["253","254","255","256","257","258","259","260"],"import React, { Component } from 'react'\r\nimport './CSS/Footer.css'\r\nimport '../components/Pages/Privacy'\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <div id=\"container\">\r\n                    <div id=\"part1\">\r\n                        <div id=\"companyinfo\"> <a id=\"sitelink\" href=\"#\">About Us</a>\r\n                            <p id=\"title\"></p>\r\n                            <p id=\"detail\"><i>We are planning to make a platform called \"Cake World” for both cake sellers and buyers. Sellers can make their own profile on this platform and can manage profiles by adding images of their cakes, adding their special skills, and can market themselves.</i></p>\r\n                        </div>\r\n                        <div id=\"explore\">\r\n                            <p id=\"txt1\">Explore</p> <a class=\"link\" href=\"#\">Home</a> <a class=\"link\" href=\"#\">About</a> <a class=\"link\" href=\"#\">Help</a> <a class=\"link\" href=\"#\">Careers</a>\r\n                        </div>\r\n                        <div id=\"contact\">\r\n                            <p id=\"txt2\">Contact Us</p>\r\n                            <p class=\"text\">Email :</p>\r\n                            <p class=\"text\">Telephone No :</p>\r\n                            <p class=\"text\">Fax :</p>\r\n                            <br></br>\r\n                            <p class=\"text\">CakeWorld Company, Hapugala,</p>\r\n                            <p class=\"text\">Galle</p>\r\n                            <p class=\"text\">Sri Lanka</p>\r\n                        </div>\r\n                        <div id=\"legal\">\r\n                            <p id=\"txt3\">Legal</p> <a class=\"link1\" href=\"#\">Terms and Conditions</a> <a class=\"link1\" href=\"/Privacy\">Privacy Policy</a>\r\n                        </div>\r\n                        <div id=\"subscribe\">\r\n                            <p id=\"txt4\">Hot Line </p>\r\n                            <p id=\"txt7\">011 000 0000 </p>\r\n                            <a class=\"waves-effect waves-light btn\"></a>\r\n                            <p id=\"txt5\">Connect With US</p> <i class=\"fab fa-facebook-square social fa-2x\"></i> <i class=\"fab fa-linkedin social fa-2x\"></i> <i class=\"fab fa-twitter-square social fa-2x\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"part2\">\r\n                        <p id=\"txt6\"><i class=\"material-icons tiny\"> copyrightcopyright 2020 cakeworld - All right reserved</i></p>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer\r\n","D:\\GIT\\Front_End\\src\\components\\DeliveryInfo.js",[],"D:\\GIT\\Front_End\\src\\components\\Details1.js",["261","262"],"D:\\GIT\\Front_End\\src\\components\\Register1.js",[],"D:\\GIT\\Front_End\\src\\components\\Selection.js",["263"],"import React, { Component } from 'react';\r\nimport './CSS/form.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Selection extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n\r\n\r\n            <div class=\"selection\">\r\n            <h4><strong>Welcome to the CakeWorld</strong></h4>\r\n                You can connect with us as Home-made cake seller or as Buyer.\r\n                <p>Please Register first..</p>\r\n\r\n            </div>\r\n\r\n            <div class=\"row row0\">\r\n\r\n\r\n        <div class=\"column column0\"> \r\n        <button class=\"btn btn-primary\">\r\n        <a href=\"/Register\"> Seller </a> \r\n        </button>\r\n         </div>\r\n\r\n         <div class=\"column column0\">  \r\n        <button class=\"btn btn-primary\">\r\n        <a href=\"/Register1\" > Buyer </a> \r\n        </button>\r\n         </div>\r\n\r\n\r\n            \r\n               \r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n};\r\nexport default Selection","D:\\GIT\\Front_End\\src\\components\\Navigationbar.js",["264","265","266","267","268","269","270","271"],"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport icon from '../Media/logo/logo.png';\r\nimport './CSS/Navigationbar.css';\r\nimport Carticon from '../Media/icon/carticon.svg';\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../Actions/Auth\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport{ ProductConsumer} from '../contextAPI';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Navigationbar = ({ auth: { isAuthenticated ,loading, user }, logout }) =>{\r\n  const authLinks = (\r\n    <div class=\"custom-container\">\r\n        <nav class=\"navbar navbar-expand-sm navbar-custom\">\r\n        <div class=\"topnav\">\r\n              <div class=\"topnav-right\">\r\n              <Link to=\"/\" class=\"navbar-brand\">Home</Link>\r\n              <Link to=\"/About\" class=\"navbar-brand\">About</Link>\r\n              <Link to=\"/upload_product/ProductList\"  class=\"navbar-brand\">My Profile</Link>\r\n\r\n                \r\n                <Link to=\"/DeliveryInfo\" class=\"navbar-brand\">Delivery Info</Link>\r\n                <Link to=\"/Productlist\" class=\"navbar-brand\">Gifts</Link>\r\n       \r\n                  <div className=\"carticon\">\r\n                    \r\n                    <div>\r\n                      <Link to=\"/CartProducts\">\r\n                      <img src={Carticon} alt=\"/\"  width=\"30px\"/> \r\n                      </Link>\r\n                     \r\n                    </div>\r\n                </div>\r\n                \r\n   \r\n      \r\n        <a onClick={logout} href=\"#!\">\r\n        <span >Logout</span>\r\n          </a>\r\n        \r\n     </div>\r\n     </div>\r\n     <a class=\"right\" href=\"#\">\r\n          <div>\r\n              <img\r\n                  src={icon}  \r\n                  height=\"90\"\r\n                  width=\"500\"\r\n                  \r\n                 \r\n              />\r\n              </div> \r\n              </a>\r\n      </nav>\r\n      </div>\r\n  );\r\n\r\n\r\n\r\n  const adminLinks = (\r\n    <div class=\"custom-container\">\r\n        <nav class=\"navbar navbar-expand-sm navbar-custom\">\r\n        <div class=\"topnav\">\r\n              <div class=\"topnav-right\">\r\n              <Link to=\"/\" class=\"navbar-brand\">Home</Link>\r\n              <Link to=\"/GetSellers\" class=\"navbar-brand\">Sellers</Link>\r\n              <Link to=\"/GetBuyers\"  class=\"navbar-brand\">Buyers</Link>\r\n              <Link to= \"/AddRegistration\" class = \"navbar-brand\">Add</Link>\r\n              <Link to= \"/Accept/AcceptList\" class = \"navbar-brand\">Products</Link>\r\n\r\n                \r\n\r\n        <a onClick={logout} href=\"#!\">\r\n        <span >Logout</span>\r\n          </a>\r\n          </div>  \r\n     </div>\r\n    \r\n     <a class=\"right\" href=\"#\">\r\n          <div>\r\n              <img\r\n                  src={icon}  \r\n                  height=\"90\"\r\n                  width=\"500\"\r\n                  \r\n                 \r\n              />\r\n              </div> \r\n              </a>\r\n      </nav>\r\n      </div>\r\n  );\r\n\r\n  const guestLinks = (\r\n<div class=\"custom-container\">\r\n        <nav class=\"navbar navbar-expand-sm navbar-custom\">\r\n            <Link to=\"/\" class=\"navbar-brand\">Home</Link>\r\n           \r\n            <div class=\"navbar-collapse collapse\" id=\"navbarCustom\">\r\n                <ul class=\"navbar-nav\">\r\n\r\n                    <li class=\"nav-item\">\r\n                        <Link to=\"/About\" class=\"nav-link\">About</Link>\r\n                    </li> \r\n                </ul>\r\n            </div>\r\n            \r\n            \r\n       \r\n            <div class=\"topnav\">\r\n              <div class=\"topnav-right\">\r\n\r\n                \r\n              <a class=\"navbar-brand\" href=\"#\">\r\n          <div>\r\n              <img\r\n                  src={icon}  \r\n                  height=\"50\"\r\n                  width=\"200\"\r\n                  \r\n                 \r\n              />\r\n              </div> \r\n              </a>\r\n                <Link to=\"/Login\">Login</Link>\r\n                \r\n                \r\n                <Link to=\"/Selection\">Register</Link>\r\n                \r\n                \r\n                <Link to=\"/DeliveryInfo\">Delivery Info</Link>\r\n                \r\n                \r\n               \r\n               \r\n                \r\n              </div>\r\n            </div>\r\n            );\r\n            </nav>\r\n        <div>\r\n                  \r\n        </div>\r\n    </div>\r\n  ) \r\n \r\n         \r\n     return (\r\n    <nav className=\"navigationbar\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n         \r\n        </Link>\r\n      </h1>\r\n      <Fragment>\r\n      <Fragment>  {isAuthenticated && !loading ? ((user.role=='Admin') ? adminLinks:authLinks):guestLinks}</Fragment>\r\n      </Fragment>\r\n    </nav>\r\n  );\r\n     };\r\n\r\n           \r\n                \r\n        \r\n\r\n\r\nNavigationbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n   user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navigationbar);\r\n\r\n\r\n\r\n","D:\\GIT\\Front_End\\src\\components\\Productlist.js",["272","273"],"D:\\GIT\\Front_End\\src\\components\\Pages\\Home.js",["274","275","276","277","278"],"import React, {useState, useEffect} from 'react';\r\nimport Imageslide from '../Imageslider'\r\nimport Products from '../Products/Products'\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const [products, setProducts] = useState([]);\r\n    const [cart, setCart] = useState([]);\r\n    const [details, setDetails] = useState([]);\r\n \r\n   \r\n    useEffect(() => {\r\n      if(JSON.parse(localStorage.getItem(\"cart\"))) {\r\n        setCart(JSON.parse(localStorage.getItem(\"cart\")));\r\n      }\r\n    }, [])\r\n\r\n\r\n    const addToCart = (item) => {\r\n    \r\n     const productList = [...cart];\r\n        \r\n          if(!productList.includes(item)) {\r\n            productList.push(item);\r\n          \r\n        }else{\r\n              alert(\"This product has been already added to cart.\")\r\n          };\r\n        \r\n        \r\n        const index = productList.indexOf(item);\r\n        productList[index].quantity++;\r\n        setCart(productList);\r\n        localStorage.setItem(\"cart\", JSON.stringify(productList));\r\n        \r\n    }\r\n\r\n\r\n    const changeQuantity = (item, e) => {\r\n      const productList = [...cart];\r\n      const index = productList.indexOf(item);\r\n      if(e === '+') {\r\n        productList[index].quantity++;\r\n      }\r\n      else {\r\n        if(productList[index].quantity > 1) {\r\n          productList[index].quantity--;\r\n        }\r\n        else {\r\n          productList.splice(index, 1);\r\n        }\r\n      } \r\n      setCart(productList);\r\n      localStorage.setItem(\"cart\", JSON.stringify(productList));\r\n    }\r\n     \r\n        return (\r\n            <div>\r\n                <Imageslide/>\r\n\r\n                <br/>\r\n                <Products addToCart={addToCart}/>\r\n\r\n                <br/>     \r\n           \r\n                <br/>\r\n          </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default Home\r\n","D:\\GIT\\Front_End\\src\\components\\Pages\\About.js",[],"D:\\GIT\\Front_End\\src\\components\\Pages\\Privacy.js",[],"D:\\GIT\\Front_End\\src\\components\\Admin\\Admin.js",["279"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Admin = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className=\"large\">\r\n        ADMIN \r\n      </p>\r\n            <p className=\"admin\">\r\n        SELLERS IN CAKE WORLD <Link to=\"/GetSellers\">Click</Link>\r\n      </p>\r\n      \r\n      <p className=\"admin\">\r\n      BUYERS IN CAKE WORLD <Link to=\"/GetBuyers\">Click</Link>\r\n      </p>\r\n    </Fragment>\r\n      );\r\n    };\r\n    \r\n    export default Admin;","D:\\GIT\\Front_End\\src\\components\\Admin\\GetBuyers.js",[],"D:\\GIT\\Front_End\\src\\components\\Products\\Details.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],"import React, {useState , useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport './ProductCSS/Details.css'\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport './ProductCSS/Popup.css'\r\n\r\n\r\n\r\nfunction Details(props){\r\n    const [products, setProducts] = useState([]);\r\n    const { productID } = useParams()\r\n    useEffect(() => {\r\n        axios\r\n          .get(\r\n            `https://localhost:44305/api/Product/${productID}`\r\n          )\r\n          .then(res => {\r\n            setProducts(res.data);\r\n            console.log(res.data);\r\n          })\r\n          .catch(error => console.log(error));\r\n      }, []);\r\n\r\n\r\n\r\n      const [rates, setRates] = useState([]);\r\n      useEffect(() => {\r\n        axios\r\n          .get(\r\n            `https://localhost:44305/api/Ratings/product/${productID}`\r\n          )\r\n          .then(res => {\r\n            setRates(res.data);\r\n            console.log(res.data);\r\n          })\r\n          .catch(error => console.log(error));\r\n      }, []);\r\n\r\n\r\n\r\n    const [index, setIndex] = useState(0)\r\n    const imgDiv = useRef();\r\n\r\n    const handleMouseMove = e =>{\r\n        const {left, top, width, height} = e.target.getBoundingClientRect();\r\n        const x = (e.pageX - left) / width * 100\r\n        const y = (e.pageY - top) / height * 100\r\n        imgDiv.current.style.backgroundPosition = `${x}% ${y}%`\r\n    }\r\n\r\n\r\n    \r\n    const [buyers, setBuyers] = useState([]);\r\n    useEffect(() => {\r\n      if (localStorage.token) {\r\n        const user= JSON.parse(atob(localStorage.token.split('.')[1]));\r\n        if (user.role ===\"Buyer\"){\r\n          axios.get(`https://localhost:44305/api/Buyers/${user.id}`)\r\n            .then(resp => {\r\n            setBuyers(resp.data)\r\n            console.log(resp.data);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n        }else{\r\n          console.log(`error`)\r\n        }\r\n      }\r\n    }, []);\r\n\r\n\r\n\r\n    const [rate, setRate] = useState([])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        refreshRate();\r\n    }, [])\r\n\r\n    const ratesAPI = (url = `https://localhost:44305/api/Ratings`) => {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n\r\n    function refreshRate() {\r\n        ratesAPI().fetchAll()\r\n            .then(res => {\r\n                setRate(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addOrEdit = (formData, onSuccess) => {\r\n        if (formData.get('ID') == \"0\")\r\n            ratesAPI().create(formData)\r\n                .then(res => {\r\n                    onSuccess();\r\n                    refreshRate();\r\n                })\r\n                .catch(err => console.log(err))\r\n        else\r\n            ratesAPI().update(formData.get('ID'), formData)\r\n                .then(res => {\r\n                    onSuccess();\r\n                    refreshRate();\r\n                })\r\n                .catch(err => console.log(err))\r\n    }\r\n\r\n    const showRecordDetails = data => {\r\n        setRecordForEdit(data)\r\n    }\r\n\r\n    const initialFieldValues = {\r\n        ID: 0,\r\n        productID: '',\r\n        Star: '',\r\n        buyerFirstName: '',\r\n        buyerLastName: '',\r\n        comment: ''\r\n    }\r\n    \r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues(recordForEdit);\r\n    }, [recordForEdit])\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = {}\r\n        temp.star = values.star == \"\" ? false : true;\r\n        setErrors(temp)\r\n        return Object.values(temp).every(x => x == true)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFieldValues)\r\n        document.getElementById().value = null;\r\n        setErrors({})\r\n    }\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const formData = new FormData()\r\n            formData.append('ID', values.ID)\r\n            formData.append('productID', products.productID)\r\n            formData.append('star', rating)\r\n            formData.append('comment', values.comment)\r\n            formData.append('buyerFirstName', buyers.firstName)\r\n            formData.append('buyerLastName', buyers.lastName)\r\n            addOrEdit(formData, resetForm)\r\n        }\r\n    }\r\n \r\n   \r\n\r\n    const [rating, setRating] = useState('0');\r\n    const [hover, setHover] = useState(null);\r\n\r\n    const average =  Math.round((rates.reduce((a,v) =>  a = a + v.star , 0 ))/(rates.length || rates.length >= 0) * 10 ) / 10;\r\n\r\n\r\n\r\n    const [cart, setCart] = useState([]);\r\n    useEffect(() => {\r\n        if(JSON.parse(localStorage.getItem(\"cart\"))) {\r\n          setCart(JSON.parse(localStorage.getItem(\"cart\")));\r\n        }\r\n      }, [])\r\n\r\n    const addToCart = (item) => {\r\n        const productList = [...cart];\r\n        if(!productList.includes(item)) {\r\n          productList.push(item);\r\n        }else{\r\n            alert(\"This product has been already added to cart.\")\r\n        };\r\n        const index = productList.indexOf(item);\r\n        productList[index].quantity++;\r\n        setCart(productList);\r\n        localStorage.setItem(\"cart\", JSON.stringify(productList));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const users = { id: `${buyers.id}` ,token: `${localStorage.getItem('token')}` };\r\n    const isAdmin = users.token !== 'null';\r\n    const isBuyer = users.id >= 0;\r\n    \r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"details\">\r\n                    <div className=\"img-container\" onMouseMove={handleMouseMove}\r\n                        style={{backgroundImage: `url(${products.imageSrc})`}} ref={imgDiv} \r\n                        onMouseLeave={() => imgDiv.current.style.backgroundPosition = `center`} />\r\n                    <div className=\"box-details\">\r\n                        <h2>{products.productName}</h2>\r\n                        <div>\r\n                            <span>\r\n                                {[...Array(5)].map((star, i) => {\r\n                                                const ratingValue = i + 1;\r\n                                                    return(\r\n                                                        <label>\r\n                                                            <FaStar\r\n                                                                className=\"star\"\r\n                                                                isHalf={true}\r\n                                                                color={ratingValue <= (average) ? \"#ffc107\" : \"#e4e5e9\"}\r\n                                                                size={18}\r\n                                                            />\r\n                                                        </label>\r\n                                                    )\r\n                                                })}\r\n                            </span>\r\n                            <span>({average}/5.0)</span>\r\n                        </div>\r\n                        <h3>Rs:{products.price}.00</h3>\r\n                        <h>category | {products.category} cakes</h>\r\n                        <hr/>\r\n                        <p>{products.description}</p>\r\n                        <hr/>\r\n                        <button className=\"button1\" onClick={() => addToCart(products)} >add to Cart </button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <a>{isAdmin && isBuyer && <a>add your  <a className=\"button\" href=\"#popup1\">review</a>  here..</a>}</a>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"container-name\">\r\n                    <h5> Reviews ({rates.length})</h5>\r\n                </div>\r\n                <br></br>\r\n                    {rates.map(rate => {\r\n                            return (\r\n                                <div>\r\n                                    <div onClick={() => { showRecordDetails(rate) }}>\r\n                                    <table id=\"customers\">\r\n                                        <tr>\r\n                                            <th><a>{rate.buyerFirstName}</a>  <span><a>{rate.buyerLastName}</a></span></th>\r\n                                            <th></th> \r\n                                        </tr>\r\n                                        <tr>\r\n                                        {[...Array(5)].map((star, i) => {\r\n                                                const ratingValue = i + 1;\r\n\r\n                                                return(\r\n                                                    <label>\r\n                                                        <FaStar\r\n                                                            className=\"star\"\r\n                                                            isHalf={true}\r\n                                                            color={ratingValue <= (rate.star) ? \"#ffc107\" : \"#e4e5e9\"}\r\n                                                            size={18}\r\n                                                        />\r\n                                                        \r\n                                                    </label>\r\n                                                )\r\n                                            })}   \r\n                                       ({rate.star}.0)\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><p>{rate.comment}</p></td>\r\n                                        </tr>\r\n                                        <br></br>\r\n                                    </table>\r\n                                </div>\r\n                                </div>\r\n                            );\r\n                            })}\r\n                    <br/><br/>\r\n                    <div id=\"popup1\" class=\"overlay\">\r\n                        <div className=\"popup\">\r\n                        <br></br>\r\n                            <a className=\"close\" href=\"#\">&times;</a>\r\n                            <div className=\"content\">\r\n                                <form autoComplete=\"off\" noValidate onSubmit={handleFormSubmit}>\r\n                                    <div>\r\n                                        <div className=\"rating\">\r\n                                            <p>place your review</p>\r\n                                        </div> \r\n                                            <div>\r\n                                                <div>\r\n                                                    {[...Array(5)].map((star, i) => {\r\n                                                        const ratingValue = i + 1;\r\n                                                        return(\r\n                                                            <label>\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name=\"rating\"\r\n                                                                    value={ratingValue}\r\n                                                                    onClick={() => setRating(ratingValue)}\r\n                                                                    onChange={handleInputChange}\r\n                                                                />\r\n                                                                <FaStar\r\n                                                                    className=\"star\"\r\n                                                                    color={ratingValue <= (hover || rating) ? \"#ffc107\" : \"#989799\"}\r\n                                                                    size={18}\r\n                                                                    onMouseEnter={() => setHover(ratingValue)}\r\n                                                                    onMouseLeave={() => setHover(null)}\r\n                                                                />\r\n                                                            </label>\r\n                                                            )\r\n                                                        })} ({rating}.0)\r\n                                                </div>\r\n                                                <div>\r\n                                                    <textarea \r\n                                                        className=\"textarea\"\r\n                                                        placeholder=\"Place your experience...\"\r\n                                                        name=\"comment\"\r\n                                                        value={values.comment}\r\n                                                        onChange={handleInputChange}\r\n                                                    />\r\n                                                </div>\r\n                                                <div>\r\n                                                    <button type=\"submit\" className=\"btn-submit\" >Submit</button>\r\n                                                </div>\r\n                                                <br></br><br></br>\r\n                                            </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n    }\r\n\r\nexport default Details\r\n","D:\\GIT\\Front_End\\src\\components\\Admin\\GetSellers.js",[],"D:\\GIT\\Front_End\\src\\components\\upload_product\\ProductList.js",["295","296","297"],"import React, { useState, useEffect } from 'react'\r\nimport Product from './Product'\r\nimport axios from \"axios\";\r\nimport '../CSS/form.css';\r\n\r\nexport default function ProductList() {\r\n    const [productList, setProductList] = useState([])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        refreshProductList();\r\n    }, [])\r\n\r\n\r\n    const [sellers, setSellers] = useState([]);\r\n    useEffect(() => {\r\n      if (localStorage.token) {\r\n        const user= JSON.parse(atob(localStorage.token.split('.')[1]));\r\n        if (user.role ===\"Seller\"){\r\n          axios.get(`https://localhost:44305/api/Sellers/${user.id}`)\r\n            .then(resp => {\r\n            setSellers(resp.data)\r\n            console.log(resp.data);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n        }else{\r\n          console.log(`error`)\r\n        }\r\n      }\r\n    }, []);\r\n\r\n\r\n    const productAPI = (url = 'https://localhost:44305/api/Product/') => {\r\n        return {\r\n            fetchAll: () => axios.get(`https://localhost:44305/api/Product/Sellers/${sellers.id}`),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n\r\n    function refreshProductList() {\r\n        productAPI().fetchAll()\r\n            .then(res => {\r\n                setProductList(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addOrEdit = (formData, onSuccess) => {\r\n        if (formData.get('productID') == \"0\")\r\n            productAPI().create(formData)\r\n                .then(res => {\r\n                    onSuccess();\r\n                    refreshProductList();\r\n                })\r\n                .catch(err => console.log(err))\r\n        else\r\n            productAPI().update(formData.get('productID'), formData)\r\n                .then(res => {\r\n                    onSuccess();\r\n                    refreshProductList();\r\n                })\r\n                .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    const showRecordDetails = data => {\r\n        setRecordForEdit(data)\r\n   }\r\n\r\n    const onDelete = (e, id) => {\r\n        e.stopPropagation();\r\n        if (window.confirm('Are you sure to delete this record?'))\r\n            productAPI().delete(id)\r\n                .then(res => refreshProductList())\r\n                .catch(err => console.log(err))\r\n    }\r\n\r\n    const imageCard = data => (\r\n        <div className=\"card\" onClick={() => { showRecordDetails(data) }}>\r\n            <img src={data.imageSrc} className=\"card-img-top\" />\r\n            <div className=\"card-body\">\r\n                <h4>{data.productName}</h4>\r\n                <h6>Rs {data.price}</h6>\r\n                <h6>Category - {data.category}</h6>\r\n                <span>{data.description}</span> <br />\r\n                <button className=\"delete-button btn-light\" Delete onClick={e => onDelete(e, parseInt(data.productID))}>\r\n                    Delete<i className=\"far fa-trash-alt\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"jumbotron jumbotron-fluid py-4\">\r\n                    <div className=\"container text-center\">\r\n                        <h1 className=\"typeList\">My Products</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <Product\r\n                    addOrEdit={addOrEdit}\r\n                    recordForEdit={recordForEdit}\r\n                />\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                          \r\n                            //tr > 3 td\r\n                            [...Array(Math.ceil(productList.length / 3))].map((e, i) =>\r\n                                <tr key={i}>\r\n                                    <td>{imageCard(productList[3 * i])}</td>\r\n                                    <td>{productList[3 * i + 1] ? imageCard(productList[3 * i + 1]) : null}</td>\r\n                                    <td>{productList[3 * i + 2] ? imageCard(productList[3 * i + 2]) : null}</td>\r\n                                </tr>\r\n                            )  \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\GIT\\Front_End\\src\\components\\upload_product\\Product.js",["298","299"],"import React, { useState, useEffect } from 'react'\r\nimport '../CSS/form.css';\r\nimport axios from 'axios'\r\n\r\n\r\nconst defaultImageSrc = '/img/image_placeholder.png'\r\n\r\nconst initialFieldValues = {\r\n    productID: 0,\r\n    productName: '',\r\n    price: '',\r\n    imageName: '',\r\n    category:'',\r\n    description:'',\r\n    imageSrc: defaultImageSrc,\r\n    imageFile: null\r\n}\r\n\r\n\r\nexport default function Product(props) {\r\n\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues(recordForEdit);\r\n    }, [recordForEdit])\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const showPreview = e => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader();\r\n            reader.onload = x => {\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc: x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else {\r\n            setValues({\r\n                ...values,\r\n                imageFile: null,\r\n                imageSrc: defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const validate = () => {\r\n        let temp = {}\r\n        temp.productName = values.productName === \"\" ? false : true;\r\n        temp.imageSrc = values.imageSrc === defaultImageSrc ? false : true;\r\n        setErrors(temp)\r\n        return Object.values(temp).every(x => x == true)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFieldValues)\r\n        document.getElementById('image-uploader').value = null;\r\n        setErrors({})\r\n    }\r\n\r\n    const [sellers, setSellers] = useState([]);\r\n    useEffect(() => {\r\n      if (localStorage.token) {\r\n        const user= JSON.parse(atob(localStorage.token.split('.')[1]));\r\n        if (user.role ===\"Seller\"){\r\n          axios.get(`https://localhost:44305/api/Sellers/${user.id}`)\r\n            .then(resp => {\r\n            setSellers(resp.data)\r\n            console.log(resp.data);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n        }else{\r\n          console.log(`error`)\r\n        }\r\n      }\r\n    }, []);\r\n\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const formData = new FormData()\r\n            formData.append('productID', values.productID)\r\n            formData.append('productName', values.productName)\r\n            formData.append('price', values.price)\r\n            formData.append('imageName', values.imageName)\r\n            formData.append('category', values.category)\r\n            formData.append('description', values.description)\r\n            formData.append('imageFile', values.imageFile)\r\n            formData.append('sellerID', sellers.id)\r\n            addOrEdit(formData, resetForm)\r\n        }\r\n    }\r\n\r\n    const applyErrorClass = field => ((field in errors && errors[field] === false) ? ' invalid-field' : '')\r\n\r\n  \r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container text-center\">\r\n                <p className=\"lead type pro \">Enter Product details</p>\r\n            </div>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleFormSubmit}>\r\n                <div className=\"formproduct\">\r\n                    <img src={values.imageSrc} className=\"card-img-top photo\" />\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <input type=\"file\" accept=\"image/*\" className={\"form-control-file\" + applyErrorClass('imageSrc')}\r\n                                onChange={showPreview} id=\"image-uploader\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input className={\"form-control\" + applyErrorClass('productName')} placeholder=\"Product Name\" name=\"productName\"\r\n                                value={values.productName}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\" placeholder=\"Price in Rs/=\" name=\"price\"\r\n                                value={values.price}\r\n                                onChange={handleInputChange} />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\" placeholder=\"Category\" name=\"category\"\r\n                                value={values.category}\r\n                                onChange={handleInputChange} />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\" placeholder=\"Description\" name=\"description\"\r\n                                value={values.description}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn1 btn-light\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","D:\\GIT\\Front_End\\src\\components\\routing\\PrivateRoute.js",[],"D:\\GIT\\Front_End\\src\\components\\routing\\SellerRoute.js",["300"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SellerRoute = ({ component: Component, auth: { isAuthenticated, loading, user}, ...rest }) => (\r\n    <Route {...rest} render={props => isAuthenticated && !loading ? ((user.role== 'Seller') ?\r\n\r\n    <Component {...props} /> :( <Redirect to=\"/upload_product/ProductList\" />)\r\n    ):  (\r\n   (<Redirect to='/Login' />)\r\n \r\n)\r\n    }\r\n/> );  \r\n\r\n\r\nSellerRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(SellerRoute);","D:\\GIT\\Front_End\\src\\components\\routing\\BuyerRoute.js",[],"D:\\GIT\\Front_End\\src\\components\\routing\\AdminRoute.js",["301"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AdminRoute = ({ component: Component, auth: { isAuthenticated, loading, user}, ...rest }) => (\r\n    <Route {...rest} render={props => isAuthenticated && !loading ? ((user.role== 'Admin') ?\r\n\r\n    <Component {...props} /> :( <Redirect to=\"/GetSellers\" />)\r\n    ):  (\r\n   (<Redirect to='/Login' />)\r\n \r\n)\r\n    }\r\n/> );  \r\n\r\n\r\nAdminRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(AdminRoute);","D:\\GIT\\Front_End\\src\\Actions\\Auth.js",["302","303","304"],"import axois from \"axios\";\r\n\r\n\r\n\r\n\r\n\r\nimport {\r\n  \r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  \r\n\r\n  \r\n\r\n  \r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n\r\n\r\n//load user\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    const user= JSON.parse(atob(localStorage.token.split('.')[1]));\r\n\r\n    if (user.role ===\"Seller\") {\r\n      try {\r\n        const res = await axois.get (\r\n          `https://localhost:44305/api/Sellers/${user.id}`\r\n       \r\n        );\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data,\r\n         });\r\n      } catch (error) {\r\n         dispatch({\r\n           type: AUTH_ERROR,\r\n       });\r\n       \r\n      }\r\n    }\r\n    else if (user.role ===\"Admin\") {\r\n      try {\r\n        const res = await axois.get (\r\n          `https://localhost:44305/api/Admins/${user.id}`\r\n        \r\n        );\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data,\r\n         });\r\n      } catch (error) {\r\n         dispatch({\r\n           type: AUTH_ERROR,\r\n       });\r\n      }\r\n    }\r\n       else if (user.role ===\"Buyer\") {\r\n        try {\r\n          const res = await axois.get (\r\n            `https://localhost:44305/api/Buyers/${user.id}`\r\n         \r\n          );\r\n          dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data,\r\n           });\r\n        } catch (error) {\r\n           dispatch({\r\n             type: AUTH_ERROR,\r\n         });\r\n         \r\n        }\r\n      }\r\n\r\n      }\r\n};\r\n\r\n\r\n//USER LOGIN\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: { 'Content-Type': 'application/json' ,},\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axois.post(\r\n        \"https://localhost:44305/api/Logins\",\r\n      body,\r\n      config\r\n    );\r\n    \r\n    dispatch(setAlert(\"Login Successfull\", \"success\"));\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n      \r\n    });\r\n   \r\n    \r\n  } catch (error) {\r\n    \r\n    dispatch(setAlert(\"Invalid email or password\", \"danger\"));\r\n    dispatch({\r\n      type: LOGIN_FAILED,\r\n      \r\n    });\r\n    \r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n\r\n\r\n\r\n//Seller REGISTRATION\r\n\r\nexport const registerSeller = async (FirstName, LastName, Address, Gender,Email,MobileNumber,Password,Repasswerd,Role) => {\r\n    const config = {\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n\r\n    const body = JSON.stringify({ FirstName, LastName, Address, Gender,Email,MobileNumber,Password,Repasswerd,Role});\r\n\r\n    if (Password!= Repasswerd){\r\n        alert(\"Password didn't Matched Try again..\")\r\n    }\r\n\r\n    else {\r\n\r\n\r\n        try {\r\n            await axois.post(\"https://localhost:44305/api/Sellers\", body, config);\r\n            alert(\"Your are registerd \");\r\n    \r\n        } catch (error) {\r\n            alert(\"Please Check Your Information again \");\r\n            console.log(error);\r\n            \r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n   \r\n\r\n};\r\n\r\n//BUYER REGISTRATION\r\nexport const registerBuyer = async (FirstName, LastName, Address, Gender,Email,MobileNumber,Password,Repasswerd,Role) => {\r\n  const config = {\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  const body = JSON.stringify({ FirstName, LastName, Address, Gender,Email,MobileNumber,Password,Repasswerd,Role});\r\n\r\n  if (Password!= Repasswerd){\r\n      alert(\"Password didn't Matched Try again..\")\r\n  }\r\n\r\n  else {\r\n\r\n\r\n      try {\r\n          await axois.post(\"https://localhost:44305/api/Buyers\", body, config);\r\n          alert(\"Your are registerd \");\r\n  \r\n      } catch (error) {\r\n          alert(\"Please Check Your Information again \");\r\n          console.log(error);\r\n          \r\n      }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n \r\n\r\n};\r\n\r\n\r\n//REGISTER ADMIN\r\n\r\nexport const registerAdmin = async (FirstName, LastName, Address, Gender,Email,MobileNumber,Password,Repasswerd,Role) => {\r\n  const config = {\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  const body = JSON.stringify({ FirstName, LastName, Address, Gender,Email,MobileNumber,Password,Repasswerd,Role});\r\n\r\n  if (Password!= Repasswerd){\r\n      alert(\"Password didn't Matched Try again..\")\r\n  }\r\n\r\n  else {\r\n\r\n\r\n      try {\r\n          await axois.post(\"https://localhost:44305/api/Admins\", body, config);\r\n          alert(\"Your are registerd \");\r\n  \r\n      } catch (error) {\r\n          alert(\"Please Check Your Information again \");\r\n          console.log(error);\r\n          \r\n      }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n \r\n\r\n};","D:\\GIT\\Front_End\\src\\components\\Layout\\Alert.js",[],"D:\\GIT\\Front_End\\src\\components\\Cart\\CartProducts.js",["305","306"],"import React, { useState, useEffect } from 'react'\r\nimport Cart from './Cart';\r\nimport './CartCSS/Cart.css'\r\n\r\n\r\nconst CartProducts = () => {\r\n  const [cart, setCart] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    \r\n      if(JSON.parse(localStorage.getItem(\"cart\"))) {\r\n        setCart(JSON.parse(localStorage.getItem(\"cart\")));\r\n      }\r\n    }, [])\r\n\r\n  const changeQuantity = (item, e) => {\r\n      const productList = [...cart];\r\n      const index = productList.indexOf(item);\r\n      if(e === '+') {\r\n        productList[index].quantity++;\r\n      }\r\n      else {\r\n        if(productList[index].quantity > 1) {\r\n          productList[index].quantity--;\r\n        }\r\n        else {\r\n          productList.splice(index, 1);\r\n        }\r\n      } \r\n      setCart(productList);\r\n      localStorage.setItem(\"cart\", JSON.stringify(productList));\r\n    }\r\n  \r\n      \r\n    return (\r\n        <div className=\"c-header\">\r\n            MY CART\r\n            <Cart products={cart} changeQuantity={changeQuantity}/>\r\n        </div>\r\n    )   \r\n}\r\n\r\n\r\nexport default CartProducts","D:\\GIT\\Front_End\\src\\components\\Accept\\AcceptList.js",["307","308","309"],"import React, { useState, useEffect } from 'react'\r\nimport Product from './Accept'\r\nimport axios from \"axios\";\r\nimport '../CSS/form.css';\r\n\r\nexport default function ProductList() {\r\n    const [productList, setProductList] = useState([])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        refreshProductList();\r\n    }, [])\r\n\r\n    const productAPI = (url = 'https://localhost:44305/api/Product/') => {\r\n        return {\r\n            fetchAll: () => axios.get('https://localhost:44305/api/Product/Accept/'),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n\r\n    function refreshProductList() {\r\n        productAPI().fetchAll()\r\n            .then(res => {\r\n                setProductList(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addOrEdit = (formData, onSuccess) => {\r\n        if (formData.get('productID') == \"0\")\r\n            productAPI().create(formData)\r\n                .then(res => {\r\n                    onSuccess();\r\n                    refreshProductList();\r\n                })\r\n                .catch(err => console.log(err))\r\n        else\r\n            productAPI().update(formData.get('productID'), formData)\r\n                .then(res => {\r\n                    onSuccess();\r\n                    refreshProductList();\r\n                })\r\n                .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    const showRecordDetails = data => {\r\n        setRecordForEdit(data)\r\n   }\r\n\r\n    const onDelete = (e, id) => {\r\n        e.stopPropagation();\r\n        if (window.confirm('Are you sure to delete this record?'))\r\n            productAPI().delete(id)\r\n                .then(res => refreshProductList())\r\n                .catch(err => console.log(err))\r\n    }\r\n\r\n    const imageCard = data => (\r\n        <div className=\"card\" onClick={() => { showRecordDetails(data) }}>\r\n            <img src={data.imageSrc} className=\"card-img-top\" />\r\n            <div className=\"card-body\">\r\n                <h4>{data.productName}</h4>\r\n                <h6>Rs {data.price}</h6>\r\n                <h6>Category - {data.category}</h6>\r\n                <h6>Seller ID - {data.sellerID}</h6> <br />\r\n               \r\n                <button className=\"delete-button btn-light\" Delete onClick={e => onDelete(e, parseInt(data.productID))}>\r\n                    Delete<i className=\"far fa-trash-alt\"></i>\r\n                </button>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"jumbotron jumbotron-fluid py-4\">\r\n                    <div className=\"container text-center\">\r\n                        <h1 className=\"typeList\">My Products</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <Product\r\n                    addOrEdit={addOrEdit}\r\n                    recordForEdit={recordForEdit}\r\n                />\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                          \r\n                            //tr > 3 td\r\n                            [...Array(Math.ceil(productList.length / 3))].map((e, i) =>\r\n                                <tr key={i}>\r\n                                    <td>{imageCard(productList[3 * i])}</td>\r\n                                    <td>{productList[3 * i + 1] ? imageCard(productList[3 * i + 1]) : null}</td>\r\n                                    <td>{productList[3 * i + 2] ? imageCard(productList[3 * i + 2]) : null}</td>\r\n                                </tr>\r\n                            )  \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\GIT\\Front_End\\src\\components\\Receipts\\Receipt.js",["310"],"import React from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport logo from '../../Media/logo/logo.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport './Receipt.css';\r\n\r\n\r\n\r\nvar delivery = 500;\r\nvar total =0;\r\nvar price;\r\n\r\nclass Receipt extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cart:JSON.parse(localStorage.getItem('cart')),\r\n            error:null,\r\n            billinginfos:\r\n            {\r\n                \"billingId\":this.props.location.state.billingId,\r\n                \"email\":this.props.location.state.email,\r\n                \"cardName\": this.props.location.state.cardName,\r\n                \"cardNo\":this.props.location.state.cardNo,\r\n                \"billDate\":this.props.location.state.billDate\r\n            },\r\n            response:{},\r\n            orders:[], \r\n        }\r\n    }\r\n    \r\n\r\n\r\n   generatePDF(){\r\n        \r\n        var doc = new jsPDF('p','px','a4');\r\n\r\n\r\n        doc.html(document.querySelector(\"#content\"),{\r\n            callback: function(pdf){\r\n                pdf.save(\"cakeWorld_payment_bill_info.pdf\");\r\n            }\r\n        })\r\n        \r\n     \r\n   }\r\n\r\n  \r\n  \r\n    \r\n\r\n    render(){\r\n        const{billinginfos,cart,error}=this.state;\r\n        \r\n        if(error){\r\n            return(\r\n                <div className=\"center\"><h4>Error : {error.message}!!!</h4></div>\r\n            )\r\n        }\r\n        \r\n        \r\n            return(\r\n                <div className=\"re-container\">\r\n                    <div className=\"Rec-box\">\r\n                        <br/><br/>\r\n                        <p className=\"center\" >Thank you for your purchase</p>\r\n                       \r\n                        <br/><br/>\r\n                        <div id=\"content\">\r\n                        <div id = \"capture\" className=\"Order-sum\">\r\n                            <br/>\r\n\r\n                                <div className=\"logo-container\">\r\n                                    <img className=\"logo\" src={logo} width=\"100px\"/>\r\n                 \r\n                                </div>\r\n                                \r\n\r\n                            <hr/><br/>\r\n                            <h4>Order Summary</h4>\r\n                            <div className=\"mid\">\r\n                                <div className=\"info\">\r\n                                    <br/>\r\n                                    <h8>Card Details:</h8>\r\n                                    <p>*********************************************************</p>\r\n                                    <p>\r\n                                        Card Holder's name &ensp;:&ensp;{billinginfos.cardName}                                   \r\n                                    </p>\r\n                                    <p>                                   \r\n                                        Card Number&emsp;&emsp;&emsp;&ensp;:&ensp;{billinginfos.cardNo}                               \r\n                                    </p>\r\n                                    <p>\r\n                                        Bill Date&emsp;&emsp;&emsp;&emsp;&emsp;&ensp;&nbsp;:&ensp;{billinginfos.billDate}\r\n                                    </p>\r\n                                   \r\n\r\n                                \r\n                                </div>\r\n                            </div>\r\n             \r\n                            <div id=\"bot\">\r\n                                <div id=\"table\">\r\n                                    <table>\r\n                                        <thead>\r\n                                            <tr className=\"tabletitle\">\r\n                                                <td> <h8>Cake Product</h8></td>\r\n                                                <td><h8>Quantity</h8> </td>\r\n                                                <td><h8>Price(Rs/=) </h8></td>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {cart.map(order =>\r\n                                            <tr className=\"service\" key={order.productID}>\r\n                                                <td className=\"tableitem\">\r\n                                                    <span className=\"itemtext\">{order.productName}</span>\r\n                                                </td>\r\n                                                <td className=\"tableitem\">\r\n                                                    <span className=\"itemtext\">{order.quantity}</span>\r\n                                                </td>\r\n                                                <td className=\"tableitem\">\r\n                                                    <span className=\"itemtext\">{price=order.quantity*order.price}.00</span>\r\n                                                    <span hidden>{total=total+price}.00</span>\r\n                                                    \r\n                                                </td>\r\n                                            </tr>\r\n                                             )}\r\n                                        \r\n                                            <tr className=\"service\">\r\n                                            <td className=\"tableitem\">\r\n                                                <p className=\"itemtext\"></p>\r\n                                            </td>\r\n                                            <td className=\"tableitem\">\r\n                                                <p className=\"itemtext\"><strong>Delivery Cost</strong></p>\r\n                                        \r\n                                                <p className=\"itemtext\"><strong>Total Price</strong></p>\r\n                                            </td>\r\n                                            <td className=\"tableitem\">\r\n                                                <span className=\"itemtext\"><strong>{delivery}.00</strong></span>\r\n                                      \r\n                                                <td>\r\n                                                    <span className=\"itemtext\"><strong>{total+delivery}.00</strong></span>\r\n                                                    <span hidden>{total =0}</span>\r\n                                                </td>\r\n                                            </td>\r\n                                            \r\n                                            </tr>\r\n                                        <br/>\r\n                                        </tbody>\r\n                                    \r\n                                        </table>\r\n                                        <hr/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <button onClick={this.generatePDF} >Download PDF</button>\r\n                        <br/><br/>\r\n                            <Link to=\"/\">\r\n                                <button  className=\"hm-btn\">back to home</button>\r\n                            </Link>\r\n                         <br/><br/><br/><br/><br/>\r\n                </div>\r\n            </div>                \r\n            )\r\n        }\r\n        \r\n    \r\n\r\n}\r\n\r\n\r\nexport default Receipt\r\n\r\n","D:\\GIT\\Front_End\\src\\components\\Receipts\\CoD.js",["311"],"import React from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport logo from '../../Media/logo/logo.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport './Receipt.css';\r\n\r\n\r\nvar delivery = 500;\r\nvar total =0;\r\nvar price;\r\n\r\nclass CoD extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cart:JSON.parse(localStorage.getItem('cart')),\r\n            error:null,\r\n          \r\n            response:{},\r\n            orders:[], \r\n        }\r\n    }\r\n    \r\n\r\n\r\n   generatePDF(){\r\n        \r\n        var doc = new jsPDF('p','px','a4');\r\n\r\n\r\n        doc.html(document.querySelector(\"#content\"),{\r\n            callback: function(pdf){\r\n                pdf.save(\"cakeWorld_order_details_info.pdf\");\r\n            }\r\n        })\r\n        \r\n     \r\n   }\r\n\r\n  \r\n  \r\n    \r\n\r\n    render(){\r\n        const{cart,error}=this.state;\r\n        \r\n        if(error){\r\n            return(\r\n                <div className=\"center\"><h4>Error : {error.message}!!!</h4></div>\r\n            )\r\n        }\r\n        \r\n        \r\n            return(\r\n                <div className=\"re-container\">\r\n                    <div className=\"Rec-box\">\r\n                        <br/><br/>\r\n                        <p className=\"center\" >Thank you for your purchase</p>\r\n                        <br/><br/>\r\n                        <div id=\"content\">\r\n                        <div id = \"capture\" className=\"Order-sum\">\r\n                            <br/>\r\n\r\n                                <div className=\"logo-container\">\r\n                                    <img className=\"logo\" src={logo} width=\"100px\"/>\r\n                 \r\n                                </div>\r\n                                \r\n\r\n                            <hr/><br/>\r\n                            <h4>Order Summary</h4>\r\n                            <div className=\"mid\">\r\n                               \r\n                            </div>\r\n             \r\n                            <div id=\"bot\">\r\n                                <div id=\"table\">\r\n                                    <table>\r\n                                        <thead>\r\n                                            <tr className=\"tabletitle\">\r\n                                                <td> <h8>Cake Product</h8></td>\r\n                                                <td><h8>Quantity</h8> </td>\r\n                                                <td><h8>Price(Rs/=) </h8></td>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {cart.map(order =>\r\n                                            <tr className=\"service\" key={order.productID}>\r\n                                                <td className=\"tableitem\">\r\n                                                    <span className=\"itemtext\">{order.productName}</span>\r\n                                                </td>\r\n                                                <td className=\"tableitem\">\r\n                                                    <span className=\"itemtext\">{order.quantity}</span>\r\n                                                </td>\r\n                                                <td className=\"tableitem\">\r\n                                                    <span className=\"itemtext\">{price=order.quantity*order.price}.00</span>\r\n                                                    <span hidden>{total=total+price}.00</span>\r\n                                                    \r\n                                                </td>\r\n                                            </tr>\r\n                                             )}\r\n                                        \r\n                                            <tr className=\"service\">\r\n                                            <td className=\"tableitem\">\r\n                                                <p className=\"itemtext\"></p>\r\n                                            </td>\r\n                                            <td className=\"tableitem\">\r\n                                                <p className=\"itemtext\"><strong>Delivery Cost</strong></p>\r\n                                        \r\n                                                <p className=\"itemtext\"><strong>Total Price</strong></p>\r\n                                            </td>\r\n                                            <td className=\"tableitem\">\r\n                                                <span className=\"itemtext\"><strong>{delivery}.00</strong></span>\r\n                                      \r\n                                                <td>\r\n                                                    <span className=\"itemtext\"><strong>{total+delivery}.00</strong></span>\r\n                                                    <span hidden>{total =0}</span>\r\n                                                </td>\r\n                                            </td>\r\n                                            \r\n                                            </tr>\r\n                                        <br/>\r\n                                        </tbody>\r\n                                    \r\n                                        </table>\r\n                                        <hr/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <button onClick={this.generatePDF} >Download PDF</button>\r\n                        <br/><br/>\r\n                            <Link to=\"/\">\r\n                                    <button  className=\"hm-btn\">back to home</button>\r\n                            </Link>\r\n                        <br/><br/><br/><br/>\r\n                </div>\r\n            </div>                \r\n            )\r\n        }\r\n        \r\n    \r\n\r\n}\r\n\r\n\r\nexport default CoD\r\n\r\n","D:\\GIT\\Front_End\\src\\components\\Order\\Order.js",["312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343"],"import React, {useState , useEffect, useRef,  Component} from 'react'\r\nimport axios from 'axios';\r\nimport cardpayment from '../../Media/icon/cardpayment.png';\r\nimport { Link} from \"react-router-dom\";\r\nimport CartDetails from './CartDetails';\r\nimport './Order.css';\r\nimport './PayForm.css';\r\nimport './Radio.css';\r\nimport './Popup1.css';\r\n\r\nfunction Order(props) {\r\n\r\n  const [cart, setCart] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n      if(JSON.parse(localStorage.getItem(\"cart\"))) {\r\n        setCart(JSON.parse(localStorage.getItem(\"cart\")));\r\n      }\r\n    }, [])\r\n\r\n\r\n\r\n  const changeQuantity = (item, e) => {\r\n      const productList = [...cart];\r\n      const index = productList.indexOf(item);\r\n      if(e === '+') {\r\n        productList[index].quantity++;\r\n      }\r\n      else {\r\n        if(productList[index].quantity > 1) {\r\n          productList[index].quantity--;\r\n        }\r\n        else {\r\n          productList.splice(index, 1);\r\n        }\r\n      } \r\n      setCart(productList);\r\n      localStorage.setItem(\"cart\", JSON.stringify(productList));\r\n    }\r\n    \r\n\r\n    const currDate = new Date().toLocaleDateString();\r\n    \r\n\r\n\r\n    const [buyers, setBuyers] = useState([]);\r\n    useEffect(() => {\r\n      if (localStorage.token) {\r\n        const user= JSON.parse(atob(localStorage.token.split('.')[1]));\r\n        if (user.role ===\"Buyer\"){\r\n          axios.get(`https://localhost:44305/api/Buyers/${user.id}`)\r\n            .then(resp => {\r\n            setBuyers(resp.data)\r\n            console.log(resp.data);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n        }else{\r\n          console.log(`error`)\r\n        }\r\n      }\r\n    }, []);\r\n\r\n  \r\n    localStorage.setItem(\"BUYER_EMAIL\", buyers.email);\r\n   \r\n    \r\n\r\n\r\n\r\n\r\n    const [order, setOrder] = useState([])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        refreshOrder();\r\n    }, [])\r\n\r\n    const ordersAPI = (url = `https://localhost:44305/api/Ors/`) => {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n\r\n    function refreshOrder() {\r\n        ordersAPI().fetchAll()\r\n            .then(res => {\r\n                setOrder(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addOrEdit = (formData, onSuccess) => {\r\n        if (formData.get('ID') == \"0\")\r\n            ordersAPI().create(formData)\r\n                .then(res => {\r\n                    onSuccess();\r\n                    refreshOrder();\r\n                })\r\n                .catch(err => console.log(err))\r\n        else\r\n            ordersAPI().update(formData.get('ID'), formData)\r\n                .then(res => {\r\n                    onSuccess();\r\n                    refreshOrder();\r\n                })\r\n                .catch(err => console.log(err))\r\n    }\r\n\r\n    const showRecordDetails = data => {\r\n        setRecordForEdit(data)\r\n    }\r\n\r\n\r\n    const initialFieldValues = {\r\n      ID: 0 ,\r\n      customerId: '',\r\n      Quantity: '',\r\n      orderDate:'',\r\n      requiredDate: '',\r\n      orderNumber:'',\r\n      firstName: '',\r\n      lastName: '',\r\n      companyName: '',\r\n      addressLine1: '',\r\n      addressLine2: '',\r\n      town: '',\r\n      city: '',\r\n      postalCode: '',\r\n      phone: '',\r\n      email: '',\r\n      method: ''\r\n  }\r\n\r\n\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues(recordForEdit);\r\n    }, [recordForEdit])\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = {}\r\n        temp.firstName = values.firstName == \"\" ? false : true;\r\n        temp.lastName = values.lastName == \"\" ? false : true;\r\n        temp.addressLine1 = values.addressLine1 == \"\" ? false : true;\r\n        temp.addressLine2 = values.addressLine2 == \"\" ? false : true;\r\n        temp.town = values.town == \"\" ? false : true;\r\n        temp.city = values.city == \"\" ? false : true;\r\n        temp.phone = values.phone == \"\" ? false : true;\r\n        temp.postalCode = values.postalCode == \"\" ? false : true;\r\n        temp.requiredDate = values.requiredDate == \"\" ? false : true;\r\n        setErrors(temp)\r\n        return Object.values(temp).every(x => x == true)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFieldValues)\r\n        document.getElementById().value = null;\r\n        setErrors({})\r\n    }\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const formData = new FormData()\r\n            formData.append('ID', values.ID)\r\n            formData.append('customerId', buyers.id)\r\n            formData.append('quantity', localStorage.getItem('CartQuantity'))\r\n            formData.append('orderDate', currDate)\r\n            formData.append('requiredDate', values.requiredDate)\r\n            formData.append('orderNumber', OrderNo)\r\n            formData.append('firstName', values.firstName)\r\n            formData.append('lastName', values.lastName)\r\n            formData.append('companyName', values.companyName)\r\n            formData.append('addressLine1', values.addressLine1)\r\n            formData.append('addressLine2', values.addressLine2)\r\n            formData.append('town', values.town)\r\n            formData.append('city', values.city)\r\n            formData.append('postalCode', values.postalCode)\r\n            formData.append('phone', values.phone)\r\n            formData.append('email', buyers.email)\r\n            formData.append('method', display)\r\n            addOrEdit(formData, resetForm)\r\n        };\r\n    }\r\n\r\n    const applyErrorClass = field => ((field in errors && errors[field] === false) ? ' invalid-field' : '')\r\n    \r\n    var str = `${buyers.firstName}`;\r\n    var first = str.charAt(0).toUpperCase();\r\n    var str = `${buyers.lastName}`;\r\n    var last = str.charAt(0).toUpperCase();\r\n\r\n    var OrderNo = \"#\" + \"00\" + localStorage.getItem('CartQuantity')+ first + 0 + last + buyers.id;\r\n    localStorage.setItem(\"orderNo\", OrderNo)\r\n  \r\n    \r\n    let paymentState = [\"card\", \"cash on delivery\"];\r\n    const [display, setDisplay] = useState(\"card\");\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if (localStorage.token) {\r\n    const user= JSON.parse(atob(localStorage.token.split('.')[1]));\r\n    if (user.role ===\"Buyer\"){\r\n      axios.get(`https://localhost:44305/api/Buyers/${user.id}`)\r\n        .then(resp => {\r\n        setBuyers(resp.data)\r\n        console.log(resp.data);\r\n    })\r\n    .catch(err => {\r\n        console.error(err);\r\n    });\r\n    }else{\r\n      console.log(`error`)\r\n    }\r\n  }\r\n}, []);\r\n\r\n\r\n\r\nconst cartItem = JSON.parse(localStorage.getItem(\"cart\"));\r\n\r\nconst [items, setItems] = useState([]);\r\nconst [op, setOp] = useState([])\r\n\r\n\r\nuseEffect(() => {\r\n    refreshOp();\r\n}, [])\r\n\r\nconst opsAPI = (url = `https://localhost:44305/api/OrderproDetails/`) => {\r\n    return {\r\n        fetchAll: () => axios.get(url),\r\n        create: newRecord => axios.post(url, newRecord),\r\n        update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n        delete: id => axios.delete(url + id)\r\n    }\r\n}\r\n\r\nfunction refreshOp() {\r\n    opsAPI().fetchAll()\r\n        .then(res => {\r\n            setOp(res.data)\r\n            \r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nconst addOrEdit1 = (formData, onSuccess) => {\r\n    if (formData.get('Id') == \"0\")\r\n        opsAPI().create(formData)\r\n            .then(res => {\r\n                onSuccess();\r\n                refreshOp();\r\n                \r\n            })\r\n            .catch(err => console.log(err))\r\n    else\r\n        opsAPI().update(formData.get('Id'), formData)\r\n            .then(res => {\r\n                onSuccess();\r\n                refreshOp();\r\n               \r\n            })\r\n            .catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nconst initialFieldValues1 = {\r\n\r\n  Id: 0 ,\r\n  orderNo: '',\r\n  buyerId: '',\r\n  productId: '',\r\n  productName: '',\r\n  unitPrice: '',\r\n  productQuantity: '',\r\n\r\n}\r\n\r\n\r\nconst [values1, setValues1] = useState(initialFieldValues1)\r\n\r\n\r\nuseEffect(() => {\r\n    if (recordForEdit != null)\r\n        setValues1(recordForEdit);\r\n}, [recordForEdit])\r\n\r\nconst handleInputChange1 = e => {\r\n    const { name, value } = e.target;\r\n    setValues1({\r\n        ...values1,\r\n        [name]: value\r\n    })\r\n\r\n}\r\n\r\nconst validate1 = () => {\r\n    let temp = {}\r\n    temp.id = values1.id == \"\" ? false : true;\r\n    setErrors(temp)\r\n    return Object.values(temp).every(x => x == true)\r\n}\r\n\r\nconst resetForm1 = () => {\r\n    setValues1(initialFieldValues1)\r\n    document.getElementById().value = null;\r\n    setErrors({})\r\n}\r\n\r\n\r\n\r\n\r\nconst handleFormSubmit1 = e => {\r\n   \r\n    \r\n      cartItem.forEach(function (item){\r\n  \r\n        const formData = new FormData()\r\n        formData.append('Id', values1.Id)\r\n        formData.append('orderNo', localStorage.getItem('orderNo'))\r\n        formData.append('buyerId' , buyers.id)\r\n        formData.append('productId', item.productID)\r\n        formData.append('productName', item.productName)\r\n        formData.append('unitPrice', item.price)\r\n        formData.append('productQuantity', item.quantity)\r\n        \r\n        addOrEdit1(formData, resetForm1)\r\n\r\n      }\r\n      );\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst [isOpen, setIsOpen] = useState(false);\r\nconst [isOpen1, setIsOpen1] = useState(false);\r\n \r\n  const togglePopup = () => {\r\n    if(display === \"card\")\r\n      {setIsOpen(!isOpen);}\r\n    else{\r\n      {setIsOpen1(!isOpen1);}\r\n    }\r\n  }\r\n\r\n\r\n\r\n \r\n\r\n    \r\n        return (\r\n            <div>\r\n                <div className=\"or-container\">\r\n                  <br/>\r\n      \r\n                      <div>\r\n                        {isOpen && \r\n                          <>\r\n                            <div  className=\"popup-box\">\r\n                                <div  className=\"box\">\r\n                                  <div className=\"pop-container\">\r\n                                    <h5>continue your order.....</h5>\r\n                                      <Link to=\"/Checkout\">\r\n                                          <button  className=\"pp-pay-btn\">payment</button>\r\n                                      </Link>\r\n                                  </div>\r\n                                </div>\r\n                            </div>\r\n                          </>\r\n                        }\r\n                      </div>\r\n\r\n                      <div>\r\n                        {isOpen1 && \r\n                          <>\r\n                            <div  className=\"popup-box\">\r\n                                <div  className=\"box\">\r\n                                  <div className=\"pop-container\">\r\n                                    <h5>continue your order.....</h5>\r\n                                      <Link to=\"/CoD\">\r\n                                          <button  className=\"pp-pay-btn\">continue on cash on delivery</button>\r\n                                      </Link>\r\n                                  </div>\r\n                                </div>\r\n                            </div>\r\n                          </>\r\n                        }\r\n                      </div>\r\n\r\n\r\n                    <div className=\"or-title\">\r\n                        <h2>Product Order Form</h2>\r\n                        <hr/>\r\n                        \r\n                    </div>\r\n                    <div className=\"d-flex\">\r\n                        <form autoComplete=\"off\" noValidate onSubmit={handleFormSubmit}>\r\n                            <h6>Order Details</h6>\r\n\r\n\r\n                            <label className=\"label\">\r\n                              <span className=\"fname\">First Name <span className=\"required\">*</span></span>\r\n                              <input className={+ applyErrorClass('fristName')} type=\"text\" name=\"firstName\"  value={values.firstName}  onChange={handleInputChange} required/>\r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span className=\"lname\">Last Name <span className=\"required\">*</span></span>\r\n                              <input className={+ applyErrorClass('lastName')} type=\"text\" name=\"lastName\"  value={values.lastName}  onChange={handleInputChange} required/>\r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span>Company Name (Optional)</span>\r\n                              <input type=\"text\" name=\"companyName\"  value={values.companyName}  onChange={handleInputChange}/>\r\n                            </label>\r\n                            \r\n                            <label className=\"label\">\r\n                              <span>Address <span className=\"required\">*</span></span>\r\n                              <br></br>\r\n                              <input className={+ applyErrorClass('addressLine1')} type=\"text\" name=\"addressLine1\" placeholder=\"Address Line 1\" required  value={values.addressLine1}  onChange={handleInputChange} required/>\r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span>&nbsp;</span>\r\n                              <input className={+ applyErrorClass('addressLine2')} type=\"text\" name=\"addressLine2\" placeholder=\"Address Line 2\" value={values.addressLine2}  onChange={handleInputChange}/>\r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span>Town <span className=\"required\">*</span></span>\r\n                              <input className={+ applyErrorClass('town')} type=\"text\" name=\"town\" value={values.town}  onChange={handleInputChange} required/>  \r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span>City <span className=\"required\">*</span></span>\r\n                              <input className={+ applyErrorClass('city')} type=\"text\" name=\"city\" value={values.city}  onChange={handleInputChange} required/> \r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span>Postcode / ZIP <span className=\"required\">*</span></span>\r\n                              <input className={+ applyErrorClass('postalCode')} type=\"text\" name=\"postalCode\"  value={values.postalCode} maxLength=\"5\" onChange={handleInputChange} required/> \r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span>Phone <span className=\"required\">*</span></span>\r\n                              <input className={+ applyErrorClass('phone')} type=\"text\" name=\"phone\" value={values.phone} maxLength=\"10\" onChange={handleInputChange} required/> \r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span>Email Address <span className=\"required\">*</span></span>\r\n                              <input type=\"text\"  name=\"email\" value={buyers.email}  disabled  onChange={handleInputChange}/> \r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span className=\"fname\">Order Date <span className=\"required\">*</span></span>\r\n                              <input type=\"text\" value={currDate} disabled onChange={handleInputChange} />\r\n                            </label>\r\n\r\n                            <label className=\"label\">\r\n                              <span className=\"lname\">Required Date <span className=\"required\">*</span></span>\r\n                              <input className={+ applyErrorClass('requiredDate')} type=\"date\" name=\"requiredDate\"  id=\"requiredDate\"  value={values.requiredDate}  onChange={handleInputChange} required/>\r\n                            </label>    \r\n\r\n                            <div>\r\n                            <br/><br/>\r\n                               <h6>choose your payment method</h6>\r\n\r\n                               <div className=\"rowr\">\r\n\r\n                                <div className=\"columnr\">\r\n                                  <div className=\"custom-control custom-radio\">\r\n                                    {paymentState.map(result => (\r\n                                      <div>\r\n                                        <label className=\"containerr\">\r\n                                          <h7>{result}</h7>\r\n\r\n                                          <input type=\"radio\" name=\"radio\"\r\n                                          value={result}\r\n                                          checked={display === result}\r\n                                          onChange={(e) => setDisplay(e.target.value)}\r\n                                          />\r\n\r\n                                          <span className=\"checkmark\"></span>\r\n                                        </label>\r\n                                        <hr/>\r\n                                      </div> \r\n                                    ))};\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"columnr\">\r\n                                    <div >\r\n                                      <img className=\"pay-img\" src=\"https://upload.wikimedia.org/wikipedia/en/e/eb/Stripe_logo%2C_revised_2016.png\" alt=\"/\" width=\"50\"/>\r\n                                      <img src={cardpayment} alt=\"/\" width=\"125\"/>\r\n                                    </div>\r\n\r\n                                <br/><br/>\r\n\r\n                                    <div >\r\n                                      <img className=\"pay-img\" src=\"https://thumbs.dreamstime.com/b/cash-delivery-cod-service-payment-product-shipping-transportation-flat-illustration-vector-64321924.jpg\" alt=\"/\" width=\"100\" height=\"38px\"/>\r\n                                    </div>\r\n                                </div>\r\n                               </div>\r\n\r\n                               <button type=\"submit\" className=\"continue\" onClick={() => { togglePopup(); handleFormSubmit1();}} >continue</button>\r\n                            </div>\r\n                        </form>\r\n    \r\n                        <div >\r\n                          <span><h>OrderNo</h><span></span><h3>{OrderNo}</h3></span> \r\n                          <br/><br/><hr/>\r\n\r\n                            <CartDetails/>\r\n                    \r\n                      </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Order\r\n\r\n\r\n\r\n       \r\n\r\n","D:\\GIT\\Front_End\\src\\components\\Payment\\Checkout.js",["344"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Form, Label,Input,FormGroup, FormFeedback } from 'reactstrap';\r\n\r\nimport { useHistory} from \"react-router-dom\";\r\nimport '../Order/PayForm.css';\r\n\r\n\r\nlocalStorage.getItem('Cart');\r\nconst currDate = new Date().toLocaleDateString();\r\n\r\nclass Checkout extends Component  {\r\n  \r\n  user=JSON.parse(atob(localStorage.token.split('.')[1]));\r\n\r\n    constructor(props) {\r\n      super(props);\r\n     \r\n       \r\n      this.state = this.getInitialState();\r\n  }\r\n\r\n  getInitialState = () => ({\r\n    data:{      \r\n    'cardName': '',\r\n    'cardNo': '',\r\n    'expMonth': '',\r\n    'expYear':'',\r\n    'billDate':currDate,\r\n    'email':this.user.sub,\r\n    'cvv': '',\r\n    'totalPrice':JSON.parse(localStorage.getItem('total')),\r\n    'buyerId': this.user.id,\r\n    'orderNo': localStorage.getItem('orderNo'),\r\n    },\r\n  \r\n  errors: {}\r\n  });\r\n  handleChange = (e) => {\r\n  this.setState({\r\n    \r\n  data: {\r\n    ...this.state.data,\r\n    [e.target.name]:e.target.value\r\n  },\r\n  \r\n    errors: {\r\n        ...this.state.errors,\r\n        [e.target.name]: ''\r\n    }\r\n  });\r\n  }\r\n  validate = () => {\r\n  const { data } = this.state;\r\n  let errors = {};\r\n  \r\n  if (data.cardName === '') errors.cardName = 'Card holder can not be blank.';\r\n  if (data.cardNo === '') errors.cardNo = 'Card no can not be blank.';\r\n  if (data.expMonth === '') errors.expMonth = 'Expire month can not be blank.';\r\n  if (data.expYear === '') errors.expYear = 'Expire year can not be blank.';\r\n  if (data.billDate === '') errors.billDate = 'Bill date can not be blank.';\r\n  if (data.cvv === '') errors.cvv = 'CVV can not be blank.';\r\n  \r\n  return errors;\r\n  }\r\n  \r\n  handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  \r\n  const { data} = this.state;\r\n  const history = useHistory;\r\n  const errors = this.validate();\r\n  \r\n  if (Object.keys(errors).length === 0) {\r\n  console.log(data);\r\n  axios.post('https://localhost:44305/api/Payments',\r\n  {\r\n    email:this.state.data.email,\r\n    cardName:this.state.data.cardName,\r\n    cardNo:this.state.data.cardNo,\r\n    expMonth:parseFloat(this.state.data.expMonth),\r\n    expYear:parseFloat(this.state.data.expYear),\r\n    billDate:this.state.data.billDate,\r\n    cvv:this.state.data.cvv,\r\n    totalPrice:parseFloat(this.state.data.totalPrice),\r\n    buyerId:parseFloat(this.state.data.buyerId),\r\n    orderNo:this.state.data.orderNo,\r\n  })\r\n  .then (res => {\r\n    if(res.data ===\"Success\")\r\n    {\r\n      alert(\"Payment is successful!\")\r\n      this.props.history.push(\r\n        {\r\n          pathname:'/Receipt',\r\n          state:{\r\n                billingId:data.billingId,\r\n                cardName:data.cardName,\r\n                cardNo:data.cardNo,\r\n                billDate:data.billDate,\r\n                email:data.email} \r\n        });\r\n        \r\n    }\r\n  })\r\n  \r\n  this.setState(this.getInitialState());\r\n  \r\n  } else {\r\n  this.setState({ errors });\r\n  }\r\n  }\r\n\r\n\r\n  render(){  \r\n\r\n\r\n     \r\n    const { data, errors } = this.state; \r\n        return(\r\n          <div className=\"form-group\">\r\n          <div className=\"payment-card\">\r\n              <div id=\"Registerbox\">\r\n               <div >\r\n            <Form onSubmit={this.handleSubmit}>\r\n\r\n  \r\n            <div className=\"payment-card1 mt-50 mb-50\">\r\n              <div className=\"top\">\r\n                <div className=\"payment\">Card Details</div>\r\n              </div>\r\n            <div className=\"one\">\r\n            <FormGroup>\r\n                <Label for=\"cardName\">Card Holder's Name</Label>\r\n                <Input value={data.cardName} invalid={errors.cardName? true : false} name=\"cardName\" onChange={this.handleChange} />\r\n                <FormFeedback>{errors.cardName}</FormFeedback>\r\n            </FormGroup>\r\n            </div>\r\n            <div className=\"two\">\r\n            <FormGroup>\r\n                <Label for=\"cardNo\">Card Number</Label>\r\n                <Input value={data.cardNo} invalid={errors.cardNo? true : false} name=\"cardNo\" onChange={this.handleChange} placeholder='4242-4242-4242-4242'\r\n                        pattern='[0-9]{4}\\s[0-9]{4}\\s[0-9]{4}\\s[0-9]{4}' maxLength='19'/>\r\n                <FormFeedback>{errors.cardNo}</FormFeedback>\r\n            </FormGroup>\r\n            </div>\r\n            <div>\r\n            <div >\r\n            <div className=\"three\">\r\n            <FormGroup>\r\n                <Label for=\"expMonth\">Expiration Date</Label>\r\n                <Input  value={data.expMonth} invalid={errors.expMonth? true : false} name=\"expMonth\" onChange={this.handleChange} placeholder=\"Month\" />\r\n                <FormFeedback>{errors.expMonth}</FormFeedback>\r\n            </FormGroup>\r\n            </div>\r\n            </div>\r\n            <div className=\"col\">\r\n            <div className=\"four\">\r\n            <FormGroup>\r\n                <Label for=\"expYear\">&ensp;</Label>\r\n                <Input  value={data.expYear} invalid={errors.expYear? true : false} name=\"expYear\" onChange={this.handleChange} placeholder=\"Year\" />\r\n                <FormFeedback>{errors.expYear}</FormFeedback>\r\n            </FormGroup>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"five\">\r\n            <FormGroup>\r\n                <Label for=\"cvv\">CVV</Label>\r\n                <Input value={data.cvv} invalid={errors.cvv? true : false} name=\"cvv\" onChange={this.handleChange} placeholder='123' maxLength='3'/>\r\n                <FormFeedback>{errors.cvv}</FormFeedback>\r\n            </FormGroup>\r\n              </div>     \r\n\r\n            <div>\r\n            <FormGroup>\r\n                <label><p>Total Price: Rs {data.totalPrice}.00</p></label> \r\n            </FormGroup> </div>  \r\n            <button className=\"pay-btn\">PAY</button>\r\n            </div>\r\n                     \r\n        </Form>\r\n  \r\n        </div>\r\n        </div>\r\n        \r\n        </div>\r\n        </div>\r\n        )\r\n       \r\n        }\r\n\r\n      }\r\n       \r\n\r\nexport default Checkout","D:\\GIT\\Front_End\\src\\components\\Product.js",["345"],"D:\\GIT\\Front_End\\src\\components\\GiftCart.js",["346","347"],"D:\\GIT\\Front_End\\src\\Actions\\alert.js",[],"D:\\GIT\\Front_End\\src\\components\\Order\\CartDetails.js",["348","349","350"],"import React, {useState , useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport './Order.css'\r\nimport CartNew from '../Cart/CartNew';\r\n\r\n\r\n\r\nfunction CartDetails () {\r\n\r\n  const [cart, setCart] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n      if(JSON.parse(localStorage.getItem(\"cart\"))) {\r\n        setCart(JSON.parse(localStorage.getItem(\"cart\")));\r\n      }\r\n    }, [])\r\n\r\n\r\n\r\n  const changeQuantity = (item, e) => {\r\n      const productList = [...cart];\r\n      const index = productList.indexOf(item);\r\n      if(e === '+') {\r\n        productList[index].quantity++;\r\n      }\r\n      else {\r\n        if(productList[index].quantity > 1) {\r\n          productList[index].quantity--;\r\n        }\r\n        else {\r\n          productList.splice(index, 1);\r\n        }\r\n      } \r\n      setCart(productList);\r\n      localStorage.setItem(\"cart\", JSON.stringify(productList));\r\n    }\r\n\r\n\r\n    const [buyers, setBuyers] = useState([]);\r\n    useEffect(() => {\r\n      if (localStorage.token) {\r\n        const user= JSON.parse(atob(localStorage.token.split('.')[1]));\r\n        if (user.role ===\"Buyer\"){\r\n          axios.get(`https://localhost:44305/api/Buyers/${user.id}`)\r\n            .then(resp => {\r\n            setBuyers(resp.data)\r\n            console.log(resp.data);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n        }else{\r\n          console.log(`error`)\r\n        }\r\n      }\r\n    }, []);\r\n\r\n\r\n        return (\r\n            <div className=\"Yorder\">\r\n                \r\n                    <CartNew products={cart} changeQuantity={changeQuantity}/>\r\n                             \r\n            </div>\r\n        )\r\n}\r\n\r\nexport default CartDetails\r\n\r\n\r\n\r\n       \r\n\r\n","D:\\GIT\\Front_End\\src\\Actions\\types.js",[],"D:\\GIT\\Front_End\\src\\components\\Accept\\Accept.js",["351","352","353"],"import React, { useState, useEffect } from 'react'\r\nimport '../CSS/form.css';\r\n\r\n\r\nconst defaultImageSrc = '/img/image_placeholder.png'\r\n\r\nconst initialFieldValues = {\r\n    productID: 0,\r\n    productName: '',\r\n    price: '',\r\n    imageName: '',\r\n    category:'',\r\n    description:'',\r\n    sellerID : '',\r\n    conformation : '',\r\n    imageSrc: defaultImageSrc,\r\n    imageFile: null\r\n}\r\n\r\nexport default function Product(props) {\r\n\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues(recordForEdit);\r\n    }, [recordForEdit])\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const showPreview = e => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader();\r\n            reader.onload = x => {\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc: x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else {\r\n            setValues({\r\n                ...values,\r\n                imageFile: null,\r\n                imageSrc: defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const validate = () => {\r\n        let temp = {}\r\n        temp.productName = values.productName === \"\" ? false : true;\r\n        temp.imageSrc = values.imageSrc === defaultImageSrc ? false : true;\r\n        setErrors(temp)\r\n        return Object.values(temp).every(x => x == true)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFieldValues)\r\n        document.getElementById('image-uploader').value = null;\r\n        setErrors({})\r\n    }\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const formData = new FormData()\r\n            formData.append('productID', values.productID)\r\n            formData.append('productName', values.productName)\r\n            formData.append('price', values.price)\r\n            formData.append('imageName', values.imageName)\r\n            formData.append('category', values.category)\r\n            formData.append('description', values.description)\r\n            formData.append('sellerID', values.sellerID)\r\n            formData.append('conformation', values.conformation)\r\n            formData.append('imageFile', values.imageFile)\r\n            addOrEdit(formData, resetForm)\r\n        }\r\n    }\r\n\r\n   \r\n    const applyErrorClass = field => ((field in errors && errors[field] === false) ? ' invalid-field' : '')\r\n  \r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container text-center\">\r\n                <p className=\"lead type pro \">CONFIRMATION</p>\r\n            </div>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleFormSubmit}>\r\n               \r\n                    \r\n                  \r\n                       \r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\" placeholder=\"conformation\" name=\"conformation\"\r\n                                value={values.conformation}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn1 btn-light\">Confirm</button>\r\n                        \r\n                    \r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\GIT\\Front_End\\src\\components\\Cart\\Cart.js",["354","355","356","357","358"],"import React, {useState , useEffect, Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport CartItem from './CartItem'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Cart = ({products, changeQuantity}) => {\r\n\r\n    const [classActive, toggleClass] = useState(false);\r\n    const [sum, setSum] = useState(0);\r\n\r\n    const toggleButton = () => {\r\n        toggleClass(!classActive);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let total = 0;\r\n        for(var i = 0; i < products.length ; i++) {\r\n            total+= products[i].price*products[i].quantity;\r\n        }\r\n        setSum(total);\r\n    }, [products])\r\n\r\n    const checkout = () => {\r\n        if(localStorage.getItem('token') !== null)\r\n        {alert(`Checkout - Subtotal: Rs:${sum.toFixed(2)}`)}\r\n        else{ alert('please login')}\r\n    }\r\n    \r\n    const cartItemsLength = products.length;\r\n    localStorage.setItem(\"CartQuantity\", cartItemsLength);\r\n\r\n\r\n    const [buyers, setBuyers] = useState([]);\r\n    useEffect(() => {\r\n      if (localStorage.token) {\r\n        const user= JSON.parse(atob(localStorage.token.split('.')[1]));\r\n        if (user.role ===\"Buyer\"){\r\n          axios.get(`https://localhost:44305/api/Buyers/${user.id}`)\r\n            .then(resp => {\r\n            setBuyers(resp.data)\r\n            console.log(resp.data);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n        }else{\r\n          console.log(`error`)\r\n        }\r\n      }\r\n    }, []);\r\n\r\n    const users = { id: `${buyers.id}` ,token: `${localStorage.getItem('token')}` };\r\n    const isLog = users.token !== 'null';\r\n    const isBuyer = users.id >= 0;\r\n    const notLog = users.token === 'null';\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div  className={classActive ? \"active\" : \"\"}>\r\n                <div className=\"cart-content\">\r\n                    <div className=\"cart-list\">\r\n                        {\r\n                            products.length === 0 \r\n                            ? \r\n                            <div className=\"cart-container\">\r\n                                <div className=\"empty-cart\">\r\n                                    <p>There are no items in Cart, Please add items to checkout!!!</p>\r\n                                </div> \r\n                            </div>\r\n                            :\r\n                            products.map(product => {\r\n                                return (\r\n                                    <CartItem \r\n                                        key={product.id} \r\n                                        product={product} \r\n                                        changeQuantity={changeQuantity} \r\n                                         />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div> \r\n                    <div className=\"cart-container\">\r\n                        <div className=\"checkout-div\">\r\n                            <div className=\"checkout\">\r\n                                    <div className=\"subtotal-div\">\r\n                                        <p className=\"subtotal\">SUBTOTAL</p>\r\n                                        <p className=\"subtotal-price\">Rs: {sum.toFixed(2)}</p>\r\n                                    </div>\r\n                                <button className=\"checkout-btn\" onClick={checkout}>CHECKOUT</button>\r\n                                <Link to=\"/Order\">\r\n                                    <a>{isLog && isBuyer && <a><button className=\"payment-btn\">Order Now</button></a>}</a> \r\n                                </Link>\r\n                                <Link to=\"/Login\">\r\n                                    <a>{notLog && <a><button className=\"payment-btn\">To complete the order, please Login here</button></a>}</a>\r\n                                </Link>\r\n                                <div>\r\n                    \r\n                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </Fragment>\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Cart;\r\n","D:\\GIT\\Front_End\\src\\components\\Products\\Products.js",["359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380"],"import React, {useState, Fragment, useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport Card from './Card'\r\nimport './ProductCSS/Products.css'\r\nimport './ProductCSS/PageNumber.css'\r\n\r\n\r\n\r\nfunction Products (props) {\r\n    const [value, setValue] = useState('Select');\r\n    const [products, setProducts] = useState([]);\r\n    const [Products, sortProducts] = useState([]);\r\n    const [search, setSearch,] = useState('');\r\n    const {addToCart} = props;\r\n\r\n    const [cart, setCart] = useState([])\r\n\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [itemsPerPage, setitemsPerPage] = useState(8);\r\n\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n    const [minimumPageNumberLimit, setminimumPageNumberLimit] = useState(0);\r\n\r\n    \r\n    useEffect(() => {\r\n        axios\r\n          .get(\r\n            'https://localhost:44305/api/Product'\r\n          )\r\n          .then(res => {\r\n            setProducts(res.data);\r\n            console.log(res.data);\r\n          })\r\n          .catch(error => console.log(error));\r\n      }, []);\r\n    \r\n    \r\n    const filteredProducts = products.filter((product) => {\r\n        if (search == \"\"){\r\n            return products;\r\n        } else if (product.productName.toLowerCase().includes(search.toLowerCase())){\r\n            return products;\r\n        } else if (product.category.toLowerCase().includes(search.toLowerCase())){\r\n            return products;\r\n        }      \r\n    });\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = filteredProducts.slice(indexOfFirstItem, indexOfLastItem);\r\n          \r\n    const handleChange = e => {\r\n        setSearch(e.target.value);\r\n        setValue(e.target.value);\r\n    };\r\n\r\n\r\n    const renderfilteredProducts = products => {\r\n        return(\r\n            <div>\r\n                <div className=\"product-container\">\r\n                    <div className=\"pcard-list\">\r\n                    {\r\n                        products.length === 0 \r\n                        ? \r\n                        <div>\r\n                            <div>\r\n                                <p>There are no cake products as {search} </p>\r\n                            </div> \r\n                        </div>\r\n                        :\r\n                    products.map(product => {\r\n                            return (\r\n                                <div>\r\n                                    <div >\r\n                                        <Card product={product} key={product.id} data={product}  addToCart={addToCart}/>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                    })\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const pages =[];\r\n        for(let i=1; i<=Math.ceil(products.length/itemsPerPage);i++ ){\r\n            pages.push(i);\r\n        }\r\n        \r\n    const paginate = pageNumber => setcurrentPage(pageNumber);  \r\n        \r\n    const handleClick = (event) => {\r\n        setcurrentPage(Number(event.target.id));\r\n    }\r\n    const renderPageNumbers = pages.map(number=>{\r\n        if(number < maxPageNumberLimit+1 && number > minimumPageNumberLimit){\r\n            return (\r\n                <li\r\n                key={number}\r\n                id={number}\r\n                onClick={handleClick}\r\n                className={currentPage == number ? \"active\" : null}\r\n                >\r\n                    {number}\r\n                </li>\r\n            );\r\n        }else {\r\n            return null;\r\n        }\r\n    });\r\n\r\n\r\n    const handleNextbtn = () => {\r\n        setcurrentPage(currentPage + 1);\r\n\r\n        if(currentPage + 1 > maxPageNumberLimit){\r\n            setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setminimumPageNumberLimit(minimumPageNumberLimit + pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    const handlePrevbtn = () => {\r\n        setcurrentPage(currentPage - 1);\r\n\r\n        if((currentPage - 1) % pageNumberLimit == 0){\r\n            setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setminimumPageNumberLimit(minimumPageNumberLimit - pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    let pageIncrementBtn = null;\r\n    if(pages.length > maxPageNumberLimit){\r\n        pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>\r\n    }\r\n\r\n    let pageDecrementBtn = null;\r\n    if(pages.length > maxPageNumberLimit){\r\n        pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>\r\n    }\r\n                \r\n            \r\n\r\n    const addCart = (id) =>{\r\n        const check = cart.every(item =>{\r\n            return item._id !== id\r\n        })\r\n        if(check){\r\n            const data = products.filter(product =>{\r\n                return product._id === id\r\n            })\r\n            setCart([...cart, ...data])\r\n        }else{\r\n            alert(\"The product has been added to cart.\")\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n       const dataCart =  JSON.parse(localStorage.getItem('dataCart'))\r\n       if(dataCart) setCart(dataCart)\r\n    },[])\r\n\r\n    useEffect(() =>{\r\n        localStorage.setItem('dataCart', JSON.stringify(cart))\r\n    },[cart])\r\n\r\n       \r\n    return (\r\n        <div>\r\n            <div className=\"nav\">\r\n                <div className=\"n-container\">\r\n                    <a>\r\n                        <input type=\"text\" \r\n                        placeholder=\"Search for Cakes..\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </a>\r\n                    <a></a><a><a></a></a><a></a>\r\n                    <a>\r\n                        <h>Choose From</h>       \r\n                    </a>\r\n                    <a>\r\n                        <h className=\"sort-list\"> \r\n                            &nbsp; &nbsp;\r\n                            <select value={value} onChange={handleChange}>\r\n                                <option value=\"\">All</option>\r\n                                <option value=\"birthday\">Birthday Cakes</option>\r\n                                <option value=\"cup\">Cup Cakes</option>\r\n                                <option value=\"wedding\">Wedding Cakes</option>\r\n                                <option value=\"other\">Other Cakes</option>\r\n                            </select>\r\n                        </h>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n                    \r\n            <Fragment>\r\n            <br/>\r\n                <div >\r\n                    <div>\r\n                        {renderfilteredProducts(currentItems)}\r\n                    </div>\r\n                    <br/>\r\n                    <hr/>\r\n                    <div className=\"page-container\">\r\n                        <ul className=\"pageNumbers\">\r\n                            <li>\r\n                                <button\r\n                                onClick={handlePrevbtn}\r\n                                disabled = {currentPage == pages[0] ? true : false}\r\n                                >\r\n                                Prev\r\n                                </button>\r\n                            </li>\r\n                                {pageDecrementBtn}\r\n                                {renderPageNumbers}\r\n                                {pageIncrementBtn}\r\n                            <li>\r\n                                <button\r\n                                onClick={handleNextbtn}\r\n                                disabled = {currentPage == pages[pages.length - 1] ? true : false}\r\n                                >\r\n                                Next\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Products;\r\n\r\n","D:\\GIT\\Front_End\\src\\components\\Imageslider.js",["381","382","383","384","385"],"import React, { Component } from 'react';\r\nimport {Carousel } from 'react-bootstrap';\r\nimport icon from '../Media/img/cake01.jpg';\r\nimport icon1 from '../Media/img/cake02.jpg';\r\nimport icon2 from '../Media/img/cake03.jpg';\r\nimport icon3 from '../Media/gif/giphy.gif';\r\nimport './CSS/Imageslider.css'\r\n\r\n\r\nexport class Imageslider extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Carousel>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img class=\"ims\"                    \r\n                            src={icon}\r\n                            height=\"600\"\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3></h3>\r\n                            <p></p>\r\n                    </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                        <Carousel.Item interval={2000}>\r\n                            <img\r\n                                class=\"ims\"\r\n                                src={icon1}\r\n                                height=\"600\"\r\n                                alt=\"Third slide\"\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3></h3>\r\n                                <p></p>\r\n                            </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img\r\n                            class=\"ims\"\r\n                            src={icon2}\r\n                            height=\"600\"\r\n                            alt=\"Third slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3></h3>\r\n                            <p>.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={2000}>\r\n                        <img\r\n                            class=\"ims\"\r\n                            src={icon1}\r\n                            height=\"600\"\r\n                            alt=\"Third slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3></h3>\r\n                            <p>.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n\r\n                </Carousel>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Imageslider\r\n","D:\\GIT\\Front_End\\src\\reducers\\index.js",[],"D:\\GIT\\Front_End\\src\\components\\Cart\\CartNew.js",["386","387"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport CartItemNew from './CartItemNew'\r\nimport '../Order/Order.css'\r\n\r\n\r\n\r\nconst Cart = ({products, changeQuantity}) => {\r\n\r\n    const [classActive, toggleClass] = useState(false);\r\n    const [sum, setSum] = useState(0);\r\n\r\n    const toggleButton = () => {\r\n        toggleClass(!classActive);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let total = 0;\r\n        for(var i = 0; i < products.length ; i++) {\r\n            total+= products[i].price*products[i].quantity;\r\n        }\r\n        setSum(total);\r\n    }, [products])\r\n\r\n    \r\n    const deliverCost = 500;\r\n    const totalPrice = sum + deliverCost;\r\n    localStorage.setItem(\"total\", totalPrice);\r\n    \r\n    return (\r\n        \r\n            <div>\r\n                <br/>\r\n                            <table>\r\n                            <tr>\r\n                                <th colspan=\"2\">Cart Cakes</th>\r\n                            </tr>\r\n                            <tr>\r\n                            {\r\n                            products.map(product => {\r\n                                return (\r\n                                    <CartItemNew \r\n                                        key={product.id} \r\n                                        product={product} \r\n                                        changeQuantity={changeQuantity} \r\n                                         />\r\n                                )\r\n                            })\r\n                        }\r\n                            </tr>\r\n                            <br/>\r\n                            <tr>\r\n                                <td>No. of Cart Items: </td>\r\n                                <td>{localStorage.getItem(\"CartQuantity\")}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Sub Total: </td>\r\n                                <td>Rs: {sum.toFixed(2)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Delivery Cost: </td>\r\n                                <td>Rs: {deliverCost.toFixed(2)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Total Price: </td>\r\n                                <td>Rs: {totalPrice.toFixed(2)}</td>\r\n                            </tr>\r\n                            </table>\r\n                            <br></br>                      \r\n                            \r\n                        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Cart;","D:\\GIT\\Front_End\\src\\components\\Products\\Card.js",["388","389"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './ProductCSS/Card.css'\r\n\r\nconst Card = (props) => {\r\n    const { product, addToCart } = props;\r\n    \r\n    \r\n        return (\r\n            <div>\r\n                <div >                 \r\n                     <div className=\"cards\">\r\n                        <Link to={`/products/${props.product.productID}`}>\r\n                            <img src={props.product.imageSrc}  className=\"cards-image\" alt=\"image/\" />\r\n                        </Link>\r\n                        <div className=\"txt-area\">\r\n                            <div className=\"txt-area1\">\r\n                            <p className=\"cards-title\">{props.product.productName}</p>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"price\">Rs: {props.product.price}.00</p>\r\n                        <div>\r\n                            <Link to={`/products/${props.product.productID}`}>\r\n                                <button  className=\"cards-button1\">View</button>\r\n                            </Link>\r\n                            <button className=\"cards-button2\" onClick={() => addToCart(product)}>add to Cart </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n} \r\n\r\nexport default Card\r\n\r\n","D:\\GIT\\Front_End\\src\\components\\Cart\\CartItem.js",["390"],"import React from 'react';\r\nimport './CartCSS/Cart.css'\r\n\r\nconst CartItem = ({product, changeQuantity}) => {\r\n    return (\r\n        <div className=\"cart-container\">\r\n            <div className=\"cart-items\">\r\n            <img src={product.imageSrc}  className=\"cart-items-image\" alt=\"image/\" />\r\n                <div>\r\n                    <div>\r\n                        <p className=\"item-title\">{product.productName}</p>\r\n                        <span className=\"cart-item-price\">Rs: {product.price}.00</span>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"item-title\">category: {product.category}</h1>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"item-quantity\">Quantity: <span>{product.quantity}</span></p>\r\n                        <div>\r\n                            <button className=\"quantity-btn\" onClick={() => changeQuantity(product, '-')}>-</button>\r\n                            <span className=\"item-quantity\">{product.quantity}</span>\r\n                            <button className=\"quantity-btn\" onClick={() => changeQuantity(product, '+')}>+</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n","D:\\GIT\\Front_End\\src\\reducers\\alert.js",["391"],"import { SET_ALERT, REMOVE_ALERT } from '../Actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type)\r\n   {\r\n       case SET_ALERT:\r\n           return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n   } \r\n}","D:\\GIT\\Front_End\\src\\reducers\\auth.js",["392"],"import {\r\n    \r\n    \r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAILED,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n} from '../Actions/types';\r\n\r\nconst initialState = {\r\n    // store the token\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n       \r\n       case LOGIN_SUCCESS:\r\n            localStorage.setItem(\"token\", payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                user: JSON.parse(atob(payload.token.split('.')[1])),\r\n                loading: false\r\n            };\r\n        \r\n        case AUTH_ERROR:\r\n        case LOGIN_FAILED:\r\n        case LOGOUT:\r\n            localStorage.removeItem(\"token\");\r\n            localStorage.removeItem('cart');\r\n            localStorage.removeItem('total');\r\n            localStorage.removeItem('BUYER_EMAIL');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\GIT\\Front_End\\src\\components\\Cart\\CartItemNew.js",["393"],"import React from 'react';\r\nimport './CartCSS/Cart.css'\r\nimport './CartCSS/CartNew.css'\r\n\r\nconst CartItem = ({product, changeQuantity}) => {\r\n\r\n    \r\n    return (\r\n        <div>\r\n     \r\n      <tr>\r\n        <td><img src={product.imageSrc}  className=\"or-cart-items-image\" alt=\"image/\" /></td>\r\n        <tr>\r\n            <td>{product.productName}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>(x1)   Rs: {product.price}.00</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Quantity: {product.quantity}</td>\r\n        </tr>\r\n      </tr>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n",{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"402","line":13,"column":8,"nodeType":"400","messageId":"401","endLine":13,"endColumn":13},{"ruleId":"398","severity":1,"message":"403","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":15},{"ruleId":"398","severity":1,"message":"404","line":108,"column":15,"nodeType":"400","messageId":"401","endLine":108,"endColumn":20},{"ruleId":"398","severity":1,"message":"405","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":14},{"ruleId":"406","severity":1,"message":"407","line":11,"column":48,"nodeType":"408","endLine":11,"endColumn":74},{"ruleId":"406","severity":1,"message":"407","line":16,"column":54,"nodeType":"408","endLine":16,"endColumn":79},{"ruleId":"406","severity":1,"message":"407","line":16,"column":88,"nodeType":"408","endLine":16,"endColumn":113},{"ruleId":"406","severity":1,"message":"407","line":16,"column":123,"nodeType":"408","endLine":16,"endColumn":148},{"ruleId":"406","severity":1,"message":"407","line":16,"column":157,"nodeType":"408","endLine":16,"endColumn":182},{"ruleId":"406","severity":1,"message":"407","line":29,"column":52,"nodeType":"408","endLine":29,"endColumn":78},{"ruleId":"409","severity":1,"message":"410","line":34,"column":29,"nodeType":"408","endLine":34,"endColumn":69},{"ruleId":"406","severity":1,"message":"411","line":34,"column":29,"nodeType":"408","endLine":34,"endColumn":69},{"ruleId":"398","severity":1,"message":"412","line":14,"column":56,"nodeType":"400","messageId":"401","endLine":14,"endColumn":63},{"ruleId":"413","severity":1,"message":"414","line":34,"column":33,"nodeType":"408","endLine":34,"endColumn":71},{"ruleId":"398","severity":1,"message":"405","line":3,"column":10,"nodeType":"400","messageId":"401","endLine":3,"endColumn":14},{"ruleId":"398","severity":1,"message":"415","line":11,"column":9,"nodeType":"400","messageId":"401","endLine":11,"endColumn":24},{"ruleId":"406","severity":1,"message":"407","line":51,"column":6,"nodeType":"408","endLine":51,"endColumn":32},{"ruleId":"413","severity":1,"message":"414","line":53,"column":15,"nodeType":"408","endLine":59,"endColumn":17},{"ruleId":"406","severity":1,"message":"407","line":87,"column":6,"nodeType":"408","endLine":87,"endColumn":32},{"ruleId":"413","severity":1,"message":"414","line":89,"column":15,"nodeType":"408","endLine":95,"endColumn":17},{"ruleId":"406","severity":1,"message":"407","line":122,"column":15,"nodeType":"408","endLine":122,"endColumn":48},{"ruleId":"413","severity":1,"message":"414","line":124,"column":15,"nodeType":"408","endLine":130,"endColumn":17},{"ruleId":"416","severity":1,"message":"417","line":164,"column":61,"nodeType":"418","messageId":"419","endLine":164,"endColumn":63},{"ruleId":"398","severity":1,"message":"420","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":16},{"ruleId":"398","severity":1,"message":"421","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":16},{"ruleId":"398","severity":1,"message":"422","line":8,"column":10,"nodeType":"400","messageId":"401","endLine":8,"endColumn":18},{"ruleId":"398","severity":1,"message":"423","line":8,"column":20,"nodeType":"400","messageId":"401","endLine":8,"endColumn":31},{"ruleId":"398","severity":1,"message":"424","line":10,"column":12,"nodeType":"400","messageId":"401","endLine":10,"endColumn":19},{"ruleId":"398","severity":1,"message":"425","line":10,"column":21,"nodeType":"400","messageId":"401","endLine":10,"endColumn":31},{"ruleId":"398","severity":1,"message":"426","line":40,"column":11,"nodeType":"400","messageId":"401","endLine":40,"endColumn":25},{"ruleId":"398","severity":1,"message":"427","line":1,"column":27,"nodeType":"400","messageId":"401","endLine":1,"endColumn":35},{"ruleId":"428","severity":1,"message":"429","line":23,"column":10,"nodeType":"430","endLine":23,"endColumn":12,"suggestions":"431"},{"ruleId":"428","severity":1,"message":"429","line":38,"column":10,"nodeType":"430","endLine":38,"endColumn":12,"suggestions":"432"},{"ruleId":"398","severity":1,"message":"433","line":42,"column":12,"nodeType":"400","messageId":"401","endLine":42,"endColumn":17},{"ruleId":"398","severity":1,"message":"434","line":42,"column":19,"nodeType":"400","messageId":"401","endLine":42,"endColumn":27},{"ruleId":"398","severity":1,"message":"435","line":75,"column":12,"nodeType":"400","messageId":"401","endLine":75,"endColumn":16},{"ruleId":"428","severity":1,"message":"436","line":80,"column":8,"nodeType":"430","endLine":80,"endColumn":10,"suggestions":"437"},{"ruleId":"416","severity":1,"message":"417","line":100,"column":32,"nodeType":"418","messageId":"419","endLine":100,"endColumn":34},{"ruleId":"398","severity":1,"message":"438","line":130,"column":12,"nodeType":"400","messageId":"401","endLine":130,"endColumn":18},{"ruleId":"416","severity":1,"message":"417","line":147,"column":33,"nodeType":"418","messageId":"419","endLine":147,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":149,"column":49,"nodeType":"418","messageId":"419","endLine":149,"endColumn":51},{"ruleId":"406","severity":1,"message":"411","line":246,"column":21,"nodeType":"408","endLine":246,"endColumn":24},{"ruleId":"406","severity":1,"message":"411","line":246,"column":47,"nodeType":"408","endLine":246,"endColumn":50},{"ruleId":"406","severity":1,"message":"411","line":259,"column":49,"nodeType":"408","endLine":259,"endColumn":52},{"ruleId":"406","severity":1,"message":"411","line":259,"column":85,"nodeType":"408","endLine":259,"endColumn":88},{"ruleId":"406","severity":1,"message":"407","line":293,"column":29,"nodeType":"408","endLine":293,"endColumn":59},{"ruleId":"428","severity":1,"message":"439","line":12,"column":8,"nodeType":"430","endLine":12,"endColumn":10,"suggestions":"440"},{"ruleId":"416","severity":1,"message":"417","line":53,"column":39,"nodeType":"418","messageId":"419","endLine":53,"endColumn":41},{"ruleId":"413","severity":1,"message":"414","line":84,"column":13,"nodeType":"408","endLine":84,"endColumn":65},{"ruleId":"416","severity":1,"message":"417","line":69,"column":49,"nodeType":"418","messageId":"419","endLine":69,"endColumn":51},{"ruleId":"413","severity":1,"message":"414","line":128,"column":21,"nodeType":"408","endLine":128,"endColumn":81},{"ruleId":"416","severity":1,"message":"417","line":7,"column":80,"nodeType":"418","messageId":"419","endLine":7,"endColumn":82},{"ruleId":"416","severity":1,"message":"417","line":7,"column":80,"nodeType":"418","messageId":"419","endLine":7,"endColumn":82},{"ruleId":"416","severity":1,"message":"441","line":132,"column":17,"nodeType":"418","messageId":"419","endLine":132,"endColumn":19},{"ruleId":"416","severity":1,"message":"441","line":167,"column":15,"nodeType":"418","messageId":"419","endLine":167,"endColumn":17},{"ruleId":"416","severity":1,"message":"441","line":204,"column":15,"nodeType":"418","messageId":"419","endLine":204,"endColumn":17},{"ruleId":"398","severity":1,"message":"422","line":8,"column":10,"nodeType":"400","messageId":"401","endLine":8,"endColumn":18},{"ruleId":"398","severity":1,"message":"423","line":8,"column":20,"nodeType":"400","messageId":"401","endLine":8,"endColumn":31},{"ruleId":"428","severity":1,"message":"439","line":12,"column":8,"nodeType":"430","endLine":12,"endColumn":10,"suggestions":"442"},{"ruleId":"416","severity":1,"message":"417","line":32,"column":39,"nodeType":"418","messageId":"419","endLine":32,"endColumn":41},{"ruleId":"413","severity":1,"message":"414","line":63,"column":13,"nodeType":"408","endLine":63,"endColumn":65},{"ruleId":"413","severity":1,"message":"414","line":75,"column":37,"nodeType":"408","endLine":75,"endColumn":85},{"ruleId":"413","severity":1,"message":"414","line":66,"column":37,"nodeType":"408","endLine":66,"endColumn":85},{"ruleId":"398","severity":1,"message":"443","line":1,"column":38,"nodeType":"400","messageId":"401","endLine":1,"endColumn":44},{"ruleId":"398","severity":1,"message":"399","line":1,"column":47,"nodeType":"400","messageId":"401","endLine":1,"endColumn":56},{"ruleId":"398","severity":1,"message":"422","line":14,"column":10,"nodeType":"400","messageId":"401","endLine":14,"endColumn":18},{"ruleId":"398","severity":1,"message":"423","line":14,"column":20,"nodeType":"400","messageId":"401","endLine":14,"endColumn":31},{"ruleId":"398","severity":1,"message":"426","line":26,"column":9,"nodeType":"400","messageId":"401","endLine":26,"endColumn":23},{"ruleId":"398","severity":1,"message":"444","line":76,"column":12,"nodeType":"400","messageId":"401","endLine":76,"endColumn":17},{"ruleId":"428","severity":1,"message":"445","line":81,"column":8,"nodeType":"430","endLine":81,"endColumn":10,"suggestions":"446"},{"ruleId":"416","severity":1,"message":"417","line":101,"column":32,"nodeType":"418","messageId":"419","endLine":101,"endColumn":34},{"ruleId":"398","severity":1,"message":"447","line":117,"column":11,"nodeType":"400","messageId":"401","endLine":117,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":161,"column":43,"nodeType":"418","messageId":"419","endLine":161,"endColumn":45},{"ruleId":"416","severity":1,"message":"417","line":162,"column":41,"nodeType":"418","messageId":"419","endLine":162,"endColumn":43},{"ruleId":"416","severity":1,"message":"417","line":163,"column":49,"nodeType":"418","messageId":"419","endLine":163,"endColumn":51},{"ruleId":"416","severity":1,"message":"417","line":164,"column":49,"nodeType":"418","messageId":"419","endLine":164,"endColumn":51},{"ruleId":"416","severity":1,"message":"417","line":165,"column":33,"nodeType":"418","messageId":"419","endLine":165,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":166,"column":33,"nodeType":"418","messageId":"419","endLine":166,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":167,"column":35,"nodeType":"418","messageId":"419","endLine":167,"endColumn":37},{"ruleId":"416","severity":1,"message":"417","line":168,"column":45,"nodeType":"418","messageId":"419","endLine":168,"endColumn":47},{"ruleId":"416","severity":1,"message":"417","line":169,"column":49,"nodeType":"418","messageId":"419","endLine":169,"endColumn":51},{"ruleId":"416","severity":1,"message":"417","line":171,"column":49,"nodeType":"418","messageId":"419","endLine":171,"endColumn":51},{"ruleId":"448","severity":1,"message":"449","line":209,"column":9,"nodeType":"400","messageId":"450","endLine":209,"endColumn":12},{"ruleId":"451","severity":1,"message":"452","line":212,"column":23,"nodeType":"418","messageId":"453","endLine":212,"endColumn":24},{"ruleId":"398","severity":1,"message":"454","line":259,"column":8,"nodeType":"400","messageId":"401","endLine":259,"endColumn":13},{"ruleId":"398","severity":1,"message":"455","line":259,"column":15,"nodeType":"400","messageId":"401","endLine":259,"endColumn":23},{"ruleId":"398","severity":1,"message":"456","line":260,"column":8,"nodeType":"400","messageId":"401","endLine":260,"endColumn":10},{"ruleId":"428","severity":1,"message":"457","line":265,"column":4,"nodeType":"430","endLine":265,"endColumn":6,"suggestions":"458"},{"ruleId":"416","severity":1,"message":"417","line":286,"column":28,"nodeType":"418","messageId":"419","endLine":286,"endColumn":30},{"ruleId":"398","severity":1,"message":"459","line":327,"column":7,"nodeType":"400","messageId":"401","endLine":327,"endColumn":25},{"ruleId":"398","severity":1,"message":"460","line":336,"column":7,"nodeType":"400","messageId":"401","endLine":336,"endColumn":16},{"ruleId":"416","severity":1,"message":"417","line":338,"column":26,"nodeType":"418","messageId":"419","endLine":338,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":340,"column":45,"nodeType":"418","messageId":"419","endLine":340,"endColumn":47},{"ruleId":"461","severity":1,"message":"462","line":394,"column":7,"nodeType":"463","messageId":"464","endLine":394,"endColumn":30},{"ruleId":"465","severity":1,"message":"466","line":471,"column":213,"nodeType":"467","endLine":471,"endColumn":221},{"ruleId":"398","severity":1,"message":"468","line":71,"column":9,"nodeType":"400","messageId":"401","endLine":71,"endColumn":16},{"ruleId":"398","severity":1,"message":"469","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":16},{"ruleId":"398","severity":1,"message":"470","line":3,"column":23,"nodeType":"400","messageId":"401","endLine":3,"endColumn":32},{"ruleId":"413","severity":1,"message":"414","line":53,"column":60,"nodeType":"408","endLine":53,"endColumn":149},{"ruleId":"398","severity":1,"message":"422","line":11,"column":10,"nodeType":"400","messageId":"401","endLine":11,"endColumn":18},{"ruleId":"398","severity":1,"message":"423","line":11,"column":20,"nodeType":"400","messageId":"401","endLine":11,"endColumn":31},{"ruleId":"398","severity":1,"message":"471","line":42,"column":12,"nodeType":"400","messageId":"401","endLine":42,"endColumn":18},{"ruleId":"398","severity":1,"message":"472","line":41,"column":11,"nodeType":"400","messageId":"401","endLine":41,"endColumn":22},{"ruleId":"416","severity":1,"message":"417","line":69,"column":49,"nodeType":"418","messageId":"419","endLine":69,"endColumn":51},{"ruleId":"398","severity":1,"message":"473","line":96,"column":11,"nodeType":"400","messageId":"401","endLine":96,"endColumn":26},{"ruleId":"398","severity":1,"message":"474","line":13,"column":11,"nodeType":"400","messageId":"401","endLine":13,"endColumn":23},{"ruleId":"406","severity":1,"message":"411","line":94,"column":37,"nodeType":"408","endLine":94,"endColumn":40},{"ruleId":"406","severity":1,"message":"411","line":94,"column":61,"nodeType":"408","endLine":94,"endColumn":64},{"ruleId":"406","severity":1,"message":"411","line":97,"column":37,"nodeType":"408","endLine":97,"endColumn":40},{"ruleId":"406","severity":1,"message":"411","line":97,"column":51,"nodeType":"408","endLine":97,"endColumn":54},{"ruleId":"398","severity":1,"message":"475","line":12,"column":12,"nodeType":"400","messageId":"401","endLine":12,"endColumn":20},{"ruleId":"398","severity":1,"message":"476","line":12,"column":22,"nodeType":"400","messageId":"401","endLine":12,"endColumn":34},{"ruleId":"398","severity":1,"message":"477","line":19,"column":26,"nodeType":"400","messageId":"401","endLine":19,"endColumn":41},{"ruleId":"398","severity":1,"message":"478","line":21,"column":29,"nodeType":"400","messageId":"401","endLine":21,"endColumn":47},{"ruleId":"479","severity":1,"message":"480","line":39,"column":56,"nodeType":"481","messageId":"482","endLine":39,"endColumn":58},{"ruleId":"416","severity":1,"message":"417","line":40,"column":20,"nodeType":"418","messageId":"419","endLine":40,"endColumn":22},{"ruleId":"398","severity":1,"message":"483","line":95,"column":11,"nodeType":"400","messageId":"401","endLine":95,"endColumn":19},{"ruleId":"416","severity":1,"message":"417","line":107,"column":40,"nodeType":"418","messageId":"419","endLine":107,"endColumn":42},{"ruleId":"416","severity":1,"message":"417","line":130,"column":48,"nodeType":"418","messageId":"419","endLine":130,"endColumn":50},{"ruleId":"398","severity":1,"message":"484","line":148,"column":11,"nodeType":"400","messageId":"401","endLine":148,"endColumn":18},{"ruleId":"406","severity":1,"message":"411","line":176,"column":21,"nodeType":"408","endLine":176,"endColumn":24},{"ruleId":"409","severity":1,"message":"410","line":182,"column":21,"nodeType":"408","endLine":182,"endColumn":24},{"ruleId":"406","severity":1,"message":"411","line":182,"column":21,"nodeType":"408","endLine":182,"endColumn":24},{"ruleId":"406","severity":1,"message":"411","line":182,"column":28,"nodeType":"408","endLine":182,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":182,"column":31,"nodeType":"408","endLine":182,"endColumn":34},{"ruleId":"406","severity":1,"message":"411","line":182,"column":31,"nodeType":"408","endLine":182,"endColumn":34},{"ruleId":"409","severity":1,"message":"410","line":182,"column":42,"nodeType":"408","endLine":182,"endColumn":45},{"ruleId":"406","severity":1,"message":"411","line":182,"column":42,"nodeType":"408","endLine":182,"endColumn":45},{"ruleId":"406","severity":1,"message":"411","line":183,"column":21,"nodeType":"408","endLine":183,"endColumn":24},{"ruleId":"406","severity":1,"message":"411","line":186,"column":21,"nodeType":"408","endLine":186,"endColumn":24},{"ruleId":"416","severity":1,"message":"417","line":214,"column":57,"nodeType":"418","messageId":"419","endLine":214,"endColumn":59},{"ruleId":"416","severity":1,"message":"417","line":225,"column":57,"nodeType":"418","messageId":"419","endLine":225,"endColumn":59},{"ruleId":"398","severity":1,"message":"485","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":13},{"ruleId":"486","severity":1,"message":"487","line":22,"column":29,"nodeType":"408","endLine":22,"endColumn":33},{"ruleId":"486","severity":1,"message":"487","line":34,"column":33,"nodeType":"408","endLine":34,"endColumn":37},{"ruleId":"486","severity":1,"message":"487","line":46,"column":29,"nodeType":"408","endLine":46,"endColumn":33},{"ruleId":"486","severity":1,"message":"487","line":58,"column":29,"nodeType":"408","endLine":58,"endColumn":33},{"ruleId":"398","severity":1,"message":"488","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"474","line":12,"column":11,"nodeType":"400","messageId":"401","endLine":12,"endColumn":23},{"ruleId":"398","severity":1,"message":"399","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"489","severity":1,"message":"490","line":14,"column":29,"nodeType":"408","endLine":14,"endColumn":103},{"ruleId":"489","severity":1,"message":"490","line":8,"column":13,"nodeType":"408","endLine":8,"endColumn":86},{"ruleId":"491","severity":1,"message":"492","line":5,"column":1,"nodeType":"493","endLine":17,"endColumn":2},{"ruleId":"491","severity":1,"message":"492","line":19,"column":1,"nodeType":"493","endLine":57,"endColumn":2},{"ruleId":"489","severity":1,"message":"490","line":12,"column":13,"nodeType":"408","endLine":12,"endColumn":89},"no-native-reassign",["494"],"no-negated-in-lhs",["495"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Admin' is defined but never used.","'Product' is defined but never used.","'total' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'company' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ProductConsumer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'GiftCart' is defined but never used.","'Carticon' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'details' is assigned a value but never used.","'setDetails' is assigned a value but never used.","'changeQuantity' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productID'. Either include it or remove the dependency array.","ArrayExpression",["496"],["497"],"'index' is assigned a value but never used.","'setIndex' is assigned a value but never used.","'rate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshRate'. Either include it or remove the dependency array.",["498"],"'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshProductList'. Either include it or remove the dependency array.",["499"],"Expected '!==' and instead saw '!='.",["500"],"'useRef' is defined but never used.","'order' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshOrder'. Either include it or remove the dependency array.",["501"],"'showRecordDetails' is assigned a value but never used.","no-redeclare","'str' is already defined.","redeclared","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'op' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshOp'. Either include it or remove the dependency array.",["502"],"'handleInputChange1' is assigned a value but never used.","'validate1' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'history' is assigned a value but never used.","'Details1' is defined but never used.","'Container' is defined but never used.","'buyers' is assigned a value but never used.","'showPreview' is assigned a value but never used.","'applyErrorClass' is assigned a value but never used.","'toggleButton' is assigned a value but never used.","'Products' is assigned a value but never used.","'sortProducts' is assigned a value but never used.","'setitemsPerPage' is assigned a value but never used.","'setpageNumberLimit' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'paginate' is assigned a value but never used.","'addCart' is assigned a value but never used.","'icon3' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Fragment' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"503","fix":"504"},{"desc":"503","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"508","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},"Update the dependencies array to be: [productID]",{"range":"515","text":"516"},{"range":"517","text":"516"},"Update the dependencies array to be: [refreshRate]",{"range":"518","text":"519"},"Update the dependencies array to be: [refreshProductList]",{"range":"520","text":"521"},{"range":"522","text":"521"},"Update the dependencies array to be: [refreshOrder]",{"range":"523","text":"524"},"Update the dependencies array to be: [refreshOp]",{"range":"525","text":"526"},[665,667],"[productID]",[1032,1034],[2126,2128],"[refreshRate]",[364,366],"[refreshProductList]",[363,365],[1981,1983],"[refreshOrder]",[7238,7240],"[refreshOp]"]